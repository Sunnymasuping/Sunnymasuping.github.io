<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>马苏平的个人简历</title>
    <link href="/2025/02/26/personal-resume-build/"/>
    <url>/2025/02/26/personal-resume-build/</url>
    
    <content type="html"><![CDATA[<h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E9%A9%AC%E8%8B%8F%E5%B9%B3%E7%94%B5%E5%AD%90%E7%85%A7%E7%89%87.jpg?raw=true" alt="一寸证件照"></p><p><strong>姓名</strong>：马苏平<br><strong>出生年月</strong>：2003.04.10<br><strong>微信</strong>：msp030410<br><strong>手机号</strong>：15262118213<br><strong>政治面貌</strong>：中共预备党员<br><strong>邮箱</strong>：<a href="mailto:&#56;&#48;&#52;&#x31;&#50;&#x37;&#53;&#54;&#52;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;">804127564@qq.com</a><br><strong>现居地址</strong>：重庆市巴南区</p><hr><h1 id="教育经历"><a href="#教育经历" class="headerlink" title="教育经历"></a>教育经历</h1><p><strong>重庆理工大学</strong> 计算机科学与技术专业<br><strong>2021.09 - 至今</strong></p><ul><li>专业排名：专业前 15%</li><li>所学课程：数据结构、算法设计与分析、操作系统、计算机网络、数据库系统原理、编译原理、计算机组成原理、软件工程、人工智能、大数据技术、程序设计基础、Web 应用开发、课程设计等。</li></ul><hr><h1 id="实习经历"><a href="#实习经历" class="headerlink" title="实习经历"></a>实习经历</h1><h3 id="中煤科工检测中心有限公司（央企）-项目管理"><a href="#中煤科工检测中心有限公司（央企）-项目管理" class="headerlink" title="中煤科工检测中心有限公司（央企） - 项目管理"></a><strong>中煤科工检测中心有限公司（央企）</strong> - <em>项目管理</em></h3><p><strong>2024.01 - 2024.02</strong></p><ul><li>协助项目经理制定项目计划和时间表，确保项目进度得以合理控制。</li><li>参与项目需求分析和讨论，协助团队提供项目目标和方向的清晰指导。</li><li>跟踪项目进展情况，并进行协调以保证项目顺利推进。</li><li>与客户和利益相关者保持沟通，及时反馈项目进展情况并解决问题。</li></ul><h3 id="德勤-Deloitte（外企）-SAP-需求分析顾问"><a href="#德勤-Deloitte（外企）-SAP-需求分析顾问" class="headerlink" title="德勤 Deloitte（外企） - SAP 需求分析顾问"></a><strong>德勤 Deloitte（外企）</strong> - <em>SAP 需求分析顾问</em></h3><p><strong>2024.11 - 2025.02</strong></p><ul><li>SAPspark 优才计划成员，参与 SAP 系统的需求分析工作，确保业务完整实施。</li><li>基于业务理解，提出 SAP 系统流程优化建议，助力企业提升运营效率。</li><li>与跨部门团队紧密合作，有效沟通需求细节，确保项目需求分析与实施的高效推进。</li></ul><h3 id="淮南市万维机电有限公司-软件开发"><a href="#淮南市万维机电有限公司-软件开发" class="headerlink" title="淮南市万维机电有限公司 - 软件开发"></a><strong>淮南市万维机电有限公司</strong> - <em>软件开发</em></h3><p><strong>2024.06 - 2024.08</strong></p><ul><li>参与公司内部管理系统的开发与维护，协助编写后端接口与数据库操作。</li><li>参与项目前端以及后端开发，协助团队完成项目具体功能。</li><li>负责撰写技术文档和测试报告，提升团队开发效率。</li></ul><h3 id="重庆交通开投科技发展有限公司（国企）-系统集成"><a href="#重庆交通开投科技发展有限公司（国企）-系统集成" class="headerlink" title="重庆交通开投科技发展有限公司（国企） - 系统集成"></a><strong>重庆交通开投科技发展有限公司（国企）</strong> - <em>系统集成</em></h3><p><strong>2025.02 - 至今</strong></p><ul><li>参与智能交通系统的开发与集成，协助搭建数据采集与分析平台。</li><li>使用人工智能和数据分析技术优化交通管理系统，提升数据处理效率和预测能力。</li><li>参与智能交通设备的调试与系统集成，提供技术支持并确保系统的高效运行。</li></ul><hr><h1 id="校园经历"><a href="#校园经历" class="headerlink" title="校园经历"></a>校园经历</h1><h3 id="21-级计科-5-班-学习委员"><a href="#21-级计科-5-班-学习委员" class="headerlink" title="21 级计科 5 班 学习委员"></a><strong>21 级计科 5 班 学习委员</strong></h3><p><strong>2022.09 - 2023.06</strong></p><ul><li>组织和策划班级学习活动，协调学习任务分配，提升整体学业成绩。</li><li>负责收集、整理并发布课程、考试相关信息，组织复习计划，提高考试通过率。</li><li>积极与任课老师沟通，反馈学习需求，优化学习方法。</li></ul><h3 id="21-级计科-5-班-团支部书记"><a href="#21-级计科-5-班-团支部书记" class="headerlink" title="21 级计科 5 班 团支部书记"></a><strong>21 级计科 5 班 团支部书记</strong></h3><p><strong>2023.09 - 至今</strong></p><ul><li>策划并执行多次主题团会和团日活动，增强班级凝聚力。</li><li>负责团员日常管理与思想教育，定期开展思想政治学习。</li><li>组织班级参与校园文化建设，荣获“优秀团支部”称号。</li></ul><h3 id="校组织部-宣传室干事"><a href="#校组织部-宣传室干事" class="headerlink" title="校组织部 宣传室干事"></a><strong>校组织部 宣传室干事</strong></h3><p><strong>2022.09 - 2023.06</strong></p><ul><li>负责学院组织部官方微博与抖音账号的内容发布。</li></ul><h3 id="校舞蹈队-舞蹈队队长"><a href="#校舞蹈队-舞蹈队队长" class="headerlink" title="校舞蹈队 舞蹈队队长"></a><strong>校舞蹈队 舞蹈队队长</strong></h3><p><strong>2022.09 - 2023.06</strong></p><ul><li>组织协调团队活动，带领队员参加比赛并获优异成绩。</li></ul><hr><h1 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h1><h3 id="教师评价考核系统"><a href="#教师评价考核系统" class="headerlink" title="教师评价考核系统"></a><strong>教师评价考核系统</strong></h3><p><strong>2023.11 - 2023.12</strong></p><ul><li><strong>技术栈</strong>：Vue、Axios、HTML、JS、Thymeleaf、Servlet、JavaBean、Filter、Listener、MVC、MySQL。</li><li><strong>责任描述</strong>：前端使用 Vue 搭建界面，后端采用 Servlet 结合 JavaBean 处理业务逻辑，优化系统安全性与可维护性。</li></ul><h3 id="汽车租赁系统的开发与设计"><a href="#汽车租赁系统的开发与设计" class="headerlink" title="汽车租赁系统的开发与设计"></a><strong>汽车租赁系统的开发与设计</strong></h3><p><strong>2024.05 - 2024.06</strong></p><ul><li><strong>技术栈</strong>：JavaScript、HTML、CSS、Ajax、Node.js、Express、MySQL、Knex.js、CORS、Morgan。</li><li><strong>责任描述</strong>：负责前端界面与交互开发，协同后端实现业务功能，完成系统集成与优化。</li></ul><h3 id="微信小程序点餐系统"><a href="#微信小程序点餐系统" class="headerlink" title="微信小程序点餐系统"></a><strong>微信小程序点餐系统</strong></h3><p><strong>2024.06 - 2024.07</strong></p><ul><li><strong>技术栈</strong>：Vue2、Axios、Element UI、Uniapp、Echarts、UView、SpringBoot、MyBatis、MySQL。</li><li><strong>责任描述</strong>：<ul><li>负责小程序下单、支付、订单跟踪界面开发。</li><li>基于 SpringBoot 构建商家后台，Vue2 + Element UI 管理数据。</li><li>集成 Echarts 进行数据可视化分析。</li></ul></li></ul><hr><h1 id="所获荣誉及证书"><a href="#所获荣誉及证书" class="headerlink" title="所获荣誉及证书"></a>所获荣誉及证书</h1><ul><li><strong>沛县优秀团干部</strong></li><li><strong>校级优秀班干部</strong></li><li><strong>连续三年团员年度思想教育评议优秀</strong></li><li><strong>2023-2024 年度优秀学生三等奖学金</strong></li><li><strong>重庆理工大学五四青年表彰大会优秀奖</strong></li><li><strong>第三届“全国大学生数据分析大赛”全国一等奖</strong></li><li><strong>第三十届“开拓杯”院级三等奖</strong></li><li><strong>CET4 证书</strong></li></ul><hr><h1 id="个人优势"><a href="#个人优势" class="headerlink" title="个人优势"></a>个人优势</h1><ul><li><strong>办公能力</strong>：熟练使用 Word、Excel、PPT 等办公软件。</li><li><strong>语言能力</strong>：具备英语、日语读写交流能力。</li><li><strong>工作态度</strong>：开朗乐观，善于沟通，责任心强，团队合作能力突出。</li><li><strong>技术能力</strong>：掌握 C、Java、Python、MATLAB，熟练应用 Vue、Axios、Element UI、SpringBoot、MyBatis、MySQL、Servlet、JavaBean、Filter、Listener、MVC、Layui、Ajax、Thymeleaf 等技术。</li></ul>]]></content>
    
    
    <categories>
      
      <category>简历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人简历</tag>
      
      <tag>计算机科学与技术</tag>
      
      <tag>AI</tag>
      
      <tag>软件开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI 数字媒体技术概述</title>
    <link href="/2024/10/03/aimedia/"/>
    <url>/2024/10/03/aimedia/</url>
    
    <content type="html"><![CDATA[<h1 id="AI-数字媒体技术概述"><a href="#AI-数字媒体技术概述" class="headerlink" title="AI 数字媒体技术概述"></a>AI 数字媒体技术概述</h1><h2 id="1-AI-在数字媒体中的应用"><a href="#1-AI-在数字媒体中的应用" class="headerlink" title="1. AI 在数字媒体中的应用"></a>1. AI 在数字媒体中的应用</h2><p>人工智能（AI）技术正在深刻变革数字媒体行业，主要涉及图像生成、视频处理、音频合成、文本生成等多个领域。AI 的引入极大提升了内容创作的效率，并为个性化推荐、智能剪辑等提供了技术支撑。</p><p><img src="https://github.com/Sunnymasuping/img/blob/main/ai%E5%BA%94%E7%94%A8.png?raw=true" alt="AI 应用"></p><h2 id="2-主要-AI-数字媒体技术"><a href="#2-主要-AI-数字媒体技术" class="headerlink" title="2. 主要 AI 数字媒体技术"></a>2. 主要 AI 数字媒体技术</h2><h3 id="2-1-AI-图像生成技术"><a href="#2-1-AI-图像生成技术" class="headerlink" title="2.1 AI 图像生成技术"></a>2.1 AI 图像生成技术</h3><p>AI 图像生成技术利用深度学习和扩散模型来创建高质量图像，广泛应用于艺术创作、广告设计、影视制作等领域。</p><h4 id="主流-AI-图像生成模型"><a href="#主流-AI-图像生成模型" class="headerlink" title="主流 AI 图像生成模型"></a><strong>主流 AI 图像生成模型</strong></h4><ul><li><strong>Stable Diffusion</strong>：开源文本生成图像（Text-to-Image）模型，广泛应用于艺术创作。</li><li><strong>DALL·E</strong>：OpenAI 开发的 AI 生成图像工具，能够根据文本描述生成高质量图像。</li><li><strong>Midjourney</strong>：专注于 AI 艺术创作的文本到图像生成工具。</li></ul><h4 id="Stable-Diffusion-生成示例"><a href="#Stable-Diffusion-生成示例" class="headerlink" title="Stable Diffusion 生成示例"></a><strong>Stable Diffusion 生成示例</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> StableDiffusionPipeline<br><span class="hljs-keyword">import</span> torch<br><br>model_id = <span class="hljs-string">&quot;CompVis/stable-diffusion-v1-4&quot;</span><br>pipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)<br>pipe.to(<span class="hljs-string">&quot;cuda&quot;</span>)<br><br>prompt = <span class="hljs-string">&quot;A futuristic city skyline at sunset&quot;</span><br>image = pipe(prompt).images[<span class="hljs-number">0</span>]<br>image.save(<span class="hljs-string">&quot;ai_generated_image.png&quot;</span>)<br></code></pre></td></tr></table></figure><hr><h3 id="2-2-AI-视频生成与编辑技术"><a href="#2-2-AI-视频生成与编辑技术" class="headerlink" title="2.2 AI 视频生成与编辑技术"></a>2.2 AI 视频生成与编辑技术</h3><p>AI 在视频领域的应用涵盖智能剪辑、视频超分辨率、AI 视频生成等，常见工具包括：</p><ul><li><strong>Runway</strong>：AI 视频生成和编辑工具，可用于特效制作、视频风格转换。</li><li><strong>Synthesia</strong>：AI 虚拟主播，自动生成配音和视频内容。</li><li><strong>DeepFaceLab</strong>：用于深度伪造（Deepfake）视频制作。</li></ul><h4 id="FFmpeg-配合-AI-进行视频处理（超分辨率）"><a href="#FFmpeg-配合-AI-进行视频处理（超分辨率）" class="headerlink" title="FFmpeg 配合 AI 进行视频处理（超分辨率）"></a><strong>FFmpeg 配合 AI 进行视频处理（超分辨率）</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -i input.mp4 -vf <span class="hljs-string">&quot;scale=1920:1080:flags=lanczos&quot;</span> output.mp4<br></code></pre></td></tr></table></figure><hr><h3 id="2-3-AI-音频合成与语音处理"><a href="#2-3-AI-音频合成与语音处理" class="headerlink" title="2.3 AI 音频合成与语音处理"></a>2.3 AI 音频合成与语音处理</h3><p>AI 在音频合成和处理方面的应用包括语音克隆、音乐生成、智能降噪等。</p><h4 id="主流-AI-音频技术"><a href="#主流-AI-音频技术" class="headerlink" title="主流 AI 音频技术"></a><strong>主流 AI 音频技术</strong></h4><ul><li><strong>ElevenLabs</strong>：用于 AI 语音合成和文本转语音（TTS）。</li><li><strong>DeepVoice</strong>：基于深度学习的语音克隆系统，可模仿特定人物的声音。</li><li><strong>OpenAI Whisper</strong>：AI 语音识别模型，可进行语音转文本。</li></ul><h4 id="Whisper-语音识别示例"><a href="#Whisper-语音识别示例" class="headerlink" title="Whisper 语音识别示例"></a><strong>Whisper 语音识别示例</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> whisper<br><br>model = whisper.load_model(<span class="hljs-string">&quot;base&quot;</span>)<br>result = model.transcribe(<span class="hljs-string">&quot;audio.mp3&quot;</span>)<br><span class="hljs-built_in">print</span>(result[<span class="hljs-string">&quot;text&quot;</span>])<br></code></pre></td></tr></table></figure><hr><h3 id="2-4-AI-文本生成技术（AIGC）"><a href="#2-4-AI-文本生成技术（AIGC）" class="headerlink" title="2.4 AI 文本生成技术（AIGC）"></a>2.4 AI 文本生成技术（AIGC）</h3><p>AI 文本生成（AIGC，AI-Generated Content）在新闻写作、文案创作、剧本生成等领域发挥了重要作用。</p><h4 id="主流-AI-文本生成模型"><a href="#主流-AI-文本生成模型" class="headerlink" title="主流 AI 文本生成模型"></a><strong>主流 AI 文本生成模型</strong></h4><ul><li><strong>ChatGPT（GPT-4）</strong>：自然语言处理的顶尖模型，可用于聊天机器人、文本创作。</li><li><strong>Claude</strong>：Anthropic 开发的 AI 对话模型，专注于可控文本生成。</li><li><strong>Bard</strong>：谷歌开发的 AI 对话系统，可提供智能回答和文本生成。</li></ul><h4 id="GPT-4-生成示例"><a href="#GPT-4-生成示例" class="headerlink" title="GPT-4 生成示例"></a><strong>GPT-4 生成示例</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> openai<br><br>openai.api_key = <span class="hljs-string">&quot;your-api-key&quot;</span><br><br>response = openai.ChatCompletion.create(<br>    model=<span class="hljs-string">&quot;gpt-4&quot;</span>,<br>    messages=[&#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;请用 100 字介绍 AI 在数字媒体中的应用&quot;</span>&#125;]<br>)<br><span class="hljs-built_in">print</span>(response[<span class="hljs-string">&quot;choices&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;message&quot;</span>][<span class="hljs-string">&quot;content&quot;</span>])<br></code></pre></td></tr></table></figure><hr><h2 id="3-AI-数字媒体技术的未来趋势"><a href="#3-AI-数字媒体技术的未来趋势" class="headerlink" title="3. AI 数字媒体技术的未来趋势"></a>3. AI 数字媒体技术的未来趋势</h2><ul><li><strong>AI + 传媒</strong>：人工智能与数字媒体的结合将进一步提高内容创作的自动化程度。</li><li><strong>多模态 AI</strong>：结合文本、图像、音频、视频的 AI 生成内容（AIGC）将更加逼真。</li><li><strong>实时 AI 处理</strong>：5G 和云计算的发展推动 AI 视频编辑、语音合成等实时应用的普及。</li><li><strong>AI 版权保护</strong>：区块链和 AI 结合，以保障 AI 生成内容的版权和真实性。</li></ul><hr><h2 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h2><p>AI 技术正在赋能数字媒体行业，实现更智能化的内容创作与优化。从 AI 图像生成、视频剪辑到音频合成和文本生成，人工智能正深刻影响传媒和内容产业的发展方向。未来，AI 在数字媒体的应用将更加广泛，推动信息传播进入智能化新时代。</p><hr><h2 id="5-参考资料"><a href="#5-参考资料" class="headerlink" title="5. 参考资料"></a>5. 参考资料</h2><ul><li><a href="https://stablediffusionweb.com/">Stable Diffusion 官方网站</a></li><li><a href="https://runwayml.com/">Runway AI 视频生成</a></li><li><a href="https://elevenlabs.io/">ElevenLabs 语音合成</a></li><li><a href="https://openai.com/research/whisper">OpenAI Whisper 语音识别</a></li><li><a href="https://openai.com/gpt">ChatGPT (GPT-4) 官方文档</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>数字媒体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能</tag>
      
      <tag>深度学习</tag>
      
      <tag>计算机视觉</tag>
      
      <tag>数字媒体</tag>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自然语言处理（NLP）技术概述</title>
    <link href="/2024/09/11/nlp/"/>
    <url>/2024/09/11/nlp/</url>
    
    <content type="html"><![CDATA[<h1 id="自然语言处理（NLP）技术概述"><a href="#自然语言处理（NLP）技术概述" class="headerlink" title="自然语言处理（NLP）技术概述"></a>自然语言处理（NLP）技术概述</h1><h2 id="1-NLP-简介"><a href="#1-NLP-简介" class="headerlink" title="1. NLP 简介"></a>1. NLP 简介</h2><p>自然语言处理（Natural Language Processing, NLP）是人工智能（AI）的重要分支，旨在使计算机能够理解、生成和处理人类语言。NLP 技术广泛应用于文本分析、语音识别、机器翻译、情感分析等领域。</p><h3 id="NLP-发展历程"><a href="#NLP-发展历程" class="headerlink" title="NLP 发展历程"></a><strong>NLP 发展历程</strong></h3><ul><li><strong>1950s-1980s</strong>：基于规则的方法（如句法分析、词法分析）。</li><li><strong>1990s-2010s</strong>：统计学习方法（如 HMM、SVM、CRF）。</li><li><strong>2010s-至今</strong>：深度学习方法（如 RNN、LSTM、Transformer）。</li></ul><h3 id="NLP-应用示意图"><a href="#NLP-应用示意图" class="headerlink" title="NLP 应用示意图"></a><strong>NLP 应用示意图</strong></h3><p><img src="https://github.com/Sunnymasuping/img/blob/main/NLP.png?raw=true" alt="NLP 应用场景"></p><hr><h2 id="2-NLP-核心技术"><a href="#2-NLP-核心技术" class="headerlink" title="2. NLP 核心技术"></a>2. NLP 核心技术</h2><h3 id="2-1-词向量表示（Word-Embeddings）"><a href="#2-1-词向量表示（Word-Embeddings）" class="headerlink" title="2.1 词向量表示（Word Embeddings）"></a>2.1 词向量表示（Word Embeddings）</h3><p>词向量表示是 NLP 的基础，常见的方法包括：</p><ul><li><strong>Word2Vec</strong>：基于 Skip-gram 和 CBOW 训练词向量。</li><li><strong>GloVe</strong>：基于共现矩阵和矩阵分解的词向量训练方法。</li><li><strong>FastText</strong>：考虑子词信息的词向量表示。</li></ul><h4 id="Word2Vec-示例（使用-Gensim-训练词向量）"><a href="#Word2Vec-示例（使用-Gensim-训练词向量）" class="headerlink" title="Word2Vec 示例（使用 Gensim 训练词向量）"></a><strong>Word2Vec 示例（使用 Gensim 训练词向量）</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gensim.models <span class="hljs-keyword">import</span> Word2Vec<br><br>sentences = [[<span class="hljs-string">&quot;自然语言&quot;</span>, <span class="hljs-string">&quot;处理&quot;</span>, <span class="hljs-string">&quot;是&quot;</span>, <span class="hljs-string">&quot;人工智能&quot;</span>, <span class="hljs-string">&quot;的重要&quot;</span>, <span class="hljs-string">&quot;分支&quot;</span>]]<br>model = Word2Vec(sentences, vector_size=<span class="hljs-number">100</span>, window=<span class="hljs-number">5</span>, min_count=<span class="hljs-number">1</span>, workers=<span class="hljs-number">4</span>)<br>vector = model.wv[<span class="hljs-string">&quot;自然语言&quot;</span>]<br><span class="hljs-built_in">print</span>(vector)<br></code></pre></td></tr></table></figure><hr><h3 id="2-2-预训练语言模型（PLM）"><a href="#2-2-预训练语言模型（PLM）" class="headerlink" title="2.2 预训练语言模型（PLM）"></a>2.2 预训练语言模型（PLM）</h3><p>近年来，NLP 领域的突破主要来自于 <strong>预训练语言模型（Pretrained Language Models, PLM）</strong>，主要包括：</p><ul><li><strong>BERT（2018）</strong>：双向 Transformer 结构，擅长理解上下文。</li><li><strong>GPT-4（2023）</strong>：生成式模型，可进行复杂文本生成和对话。</li><li><strong>T5 &amp; BART</strong>：适用于文本摘要、翻译、问答等任务。</li></ul><h4 id="使用-Hugging-Face-加载-BERT-进行文本嵌入"><a href="#使用-Hugging-Face-加载-BERT-进行文本嵌入" class="headerlink" title="使用 Hugging Face 加载 BERT 进行文本嵌入"></a><strong>使用 Hugging Face 加载 BERT 进行文本嵌入</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> BertTokenizer, BertModel<br><span class="hljs-keyword">import</span> torch<br><br>tokenizer = BertTokenizer.from_pretrained(<span class="hljs-string">&quot;bert-base-chinese&quot;</span>)<br>model = BertModel.from_pretrained(<span class="hljs-string">&quot;bert-base-chinese&quot;</span>)<br><br>inputs = tokenizer(<span class="hljs-string">&quot;自然语言处理&quot;</span>, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)<br>outputs = model(**inputs)<br><span class="hljs-built_in">print</span>(outputs.last_hidden_state.shape)<br></code></pre></td></tr></table></figure><hr><h3 id="2-3-机器翻译（Machine-Translation）"><a href="#2-3-机器翻译（Machine-Translation）" class="headerlink" title="2.3 机器翻译（Machine Translation）"></a>2.3 机器翻译（Machine Translation）</h3><p>机器翻译（MT）是 NLP 的重要应用，主要技术包括：</p><ul><li><strong>统计机器翻译（SMT）</strong>：基于概率模型（如 IBM Model）。</li><li><strong>神经机器翻译（NMT）</strong>：基于 RNN、Transformer 进行翻译。</li></ul><h4 id="使用-MarianMT-进行英译中"><a href="#使用-MarianMT-进行英译中" class="headerlink" title="使用 MarianMT 进行英译中"></a><strong>使用 MarianMT 进行英译中</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> MarianMTModel, MarianTokenizer<br><br>model_name = <span class="hljs-string">&quot;Helsinki-NLP/opus-mt-en-zh&quot;</span><br>tokenizer = MarianTokenizer.from_pretrained(model_name)<br>model = MarianMTModel.from_pretrained(model_name)<br><br>text = <span class="hljs-string">&quot;Natural Language Processing is a subfield of AI.&quot;</span><br>inputs = tokenizer(text, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>, padding=<span class="hljs-literal">True</span>, truncation=<span class="hljs-literal">True</span>)<br>translated = model.generate(**inputs)<br><span class="hljs-built_in">print</span>(tokenizer.decode(translated[<span class="hljs-number">0</span>], skip_special_tokens=<span class="hljs-literal">True</span>))<br></code></pre></td></tr></table></figure><hr><h3 id="2-4-情感分析（Sentiment-Analysis）"><a href="#2-4-情感分析（Sentiment-Analysis）" class="headerlink" title="2.4 情感分析（Sentiment Analysis）"></a>2.4 情感分析（Sentiment Analysis）</h3><p>情感分析用于判断文本的情绪倾向，常见方法：</p><ul><li><strong>基于词典的方法</strong>：使用情感词典打分（如 NTUSD）。</li><li><strong>基于机器学习的方法</strong>：SVM、Naive Bayes 进行分类。</li><li><strong>基于深度学习的方法</strong>：LSTM、BERT 进行情感分类。</li></ul><h4 id="使用-TextBlob-进行情感分析"><a href="#使用-TextBlob-进行情感分析" class="headerlink" title="使用 TextBlob 进行情感分析"></a><strong>使用 TextBlob 进行情感分析</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> textblob <span class="hljs-keyword">import</span> TextBlob<br><br>text = <span class="hljs-string">&quot;I love natural language processing!&quot;</span><br>blob = TextBlob(text)<br><span class="hljs-built_in">print</span>(blob.sentiment)<br></code></pre></td></tr></table></figure><hr><h3 id="2-5-语音识别（Speech-Recognition）"><a href="#2-5-语音识别（Speech-Recognition）" class="headerlink" title="2.5 语音识别（Speech Recognition）"></a>2.5 语音识别（Speech Recognition）</h3><p>语音识别（ASR）将语音转换为文本，主要技术包括：</p><ul><li><strong>基于 HMM-GMM 的传统 ASR</strong>（如 Kaldi）。</li><li><strong>基于深度学习的 ASR</strong>（如 DeepSpeech、Whisper）。</li></ul><h4 id="使用-OpenAI-Whisper-进行语音识别"><a href="#使用-OpenAI-Whisper-进行语音识别" class="headerlink" title="使用 OpenAI Whisper 进行语音识别"></a><strong>使用 OpenAI Whisper 进行语音识别</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> whisper<br><br>model = whisper.load_model(<span class="hljs-string">&quot;base&quot;</span>)<br>result = model.transcribe(<span class="hljs-string">&quot;audio.mp3&quot;</span>)<br><span class="hljs-built_in">print</span>(result[<span class="hljs-string">&quot;text&quot;</span>])<br></code></pre></td></tr></table></figure><hr><h2 id="3-NLP-未来发展趋势"><a href="#3-NLP-未来发展趋势" class="headerlink" title="3. NLP 未来发展趋势"></a>3. NLP 未来发展趋势</h2><ul><li><strong>多模态 NLP</strong>：结合文本、图像、语音，构建更智能的 AI 系统。</li><li><strong>更大规模的预训练模型</strong>：如 GPT-4 Turbo，处理更复杂的任务。</li><li><strong>个性化 NLP</strong>：结合用户数据，实现个性化推荐和生成。</li><li><strong>低资源 NLP</strong>：提高小数据集上的表现，增强跨语言能力。</li></ul><hr><h2 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h2><p>自然语言处理（NLP）技术不断发展，从传统的规则方法到深度学习，NLP 已广泛应用于翻译、对话、搜索等领域。随着 AI 模型的进步，NLP 未来将朝着更智能、更高效的方向发展。</p><hr><h2 id="5-参考资料"><a href="#5-参考资料" class="headerlink" title="5. 参考资料"></a>5. 参考资料</h2><ul><li><a href="https://huggingface.co/docs/transformers/">Hugging Face Transformers</a></li><li><a href="https://openai.com/research/whisper">OpenAI Whisper</a></li><li><a href="https://radimrehurek.com/gensim/models/word2vec.html">Gensim Word2Vec 官方文档</a></li><li><a href="https://arxiv.org/abs/1810.04805">Google BERT 论文</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
      <tag>深度学习</tag>
      
      <tag>自然语言处理</tag>
      
      <tag>NLP</tag>
      
      <tag>语言模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>传媒技术概述</title>
    <link href="/2024/08/03/media/"/>
    <url>/2024/08/03/media/</url>
    
    <content type="html"><![CDATA[<h1 id="传媒技术概述"><a href="#传媒技术概述" class="headerlink" title="传媒技术概述"></a>传媒技术概述</h1><h2 id="1-传媒技术简介"><a href="#1-传媒技术简介" class="headerlink" title="1. 传媒技术简介"></a>1. 传媒技术简介</h2><p>传媒技术涵盖了视频制作、音频处理、图像编辑、虚拟现实（VR）、人工智能（AI）生成内容等多个领域。现代传媒技术的发展极大地提升了信息传播的效率和质量。</p><h3 id="中国化媒体全景图"><a href="#中国化媒体全景图" class="headerlink" title="中国化媒体全景图"></a><strong>中国化媒体全景图</strong></h3><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E4%B8%AD%E5%9B%BD%E5%8C%96%E5%AA%92%E4%BD%93%E5%85%A8%E6%99%AF%E5%9B%BE.gif?raw=true" alt="中国化媒体全景图"></p><h2 id="2-主要传媒技术"><a href="#2-主要传媒技术" class="headerlink" title="2. 主要传媒技术"></a>2. 主要传媒技术</h2><h3 id="2-1-视频编辑"><a href="#2-1-视频编辑" class="headerlink" title="2.1 视频编辑"></a>2.1 视频编辑</h3><p>视频编辑技术广泛应用于电影、广告、短视频等领域，常用的软件和技术包括：</p><ul><li><strong>Adobe Premiere Pro</strong>：专业非线性编辑软件，适用于视频剪辑、调色、音频后期等。</li><li><strong>Final Cut Pro</strong>：Mac 平台上强大的视频剪辑工具。</li><li><strong>DaVinci Resolve</strong>：集视频剪辑、调色、视觉特效、音频后期于一体的软件。</li><li><strong>FFmpeg</strong>：开源的多媒体处理工具，支持视频编码、转码、剪辑等。</li></ul><h4 id="FFmpeg-命令示例（视频格式转换）"><a href="#FFmpeg-命令示例（视频格式转换）" class="headerlink" title="FFmpeg 命令示例（视频格式转换）"></a>FFmpeg 命令示例（视频格式转换）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -i input.mp4 -c:v libx264 -crf 23 output.mp4<br></code></pre></td></tr></table></figure><h3 id="2-2-音频处理"><a href="#2-2-音频处理" class="headerlink" title="2.2 音频处理"></a>2.2 音频处理</h3><p>音频处理技术用于音乐制作、播客、语音识别等领域，常见工具包括：</p><ul><li><strong>Adobe Audition</strong>：专业音频编辑与混音工具。</li><li><strong>Audacity</strong>：开源免费音频编辑软件。</li><li><strong>Logic Pro X</strong>：苹果生态下的专业音乐制作软件。</li><li><strong>FFmpeg</strong>（音频处理）：</li></ul><h4 id="FFmpeg-命令示例（转换音频格式）"><a href="#FFmpeg-命令示例（转换音频格式）" class="headerlink" title="FFmpeg 命令示例（转换音频格式）"></a>FFmpeg 命令示例（转换音频格式）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -i input.wav -c:a mp3 output.mp3<br></code></pre></td></tr></table></figure><h3 id="数字传媒技术类型"><a href="#数字传媒技术类型" class="headerlink" title="数字传媒技术类型"></a><strong>数字传媒技术类型</strong></h3><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E6%95%B0%E5%AD%97%E4%BC%A0%E5%AA%92%E6%8A%80%E6%9C%AF%E7%B1%BB%E5%9E%8B.png?raw=true" alt="数字传媒技术类型"></p><h3 id="2-3-图像编辑"><a href="#2-3-图像编辑" class="headerlink" title="2.3 图像编辑"></a>2.3 图像编辑</h3><p>图像编辑是传媒内容创作的基础，涉及修图、合成、设计等，常用工具包括：</p><ul><li><strong>Adobe Photoshop</strong>：行业标准的图像处理软件。</li><li><strong>GIMP</strong>：开源的 Photoshop 替代方案。</li><li><strong>Canva</strong>：适合非专业人士的在线设计工具。</li></ul><h3 id="2-4-AI-生成内容（AIGC）"><a href="#2-4-AI-生成内容（AIGC）" class="headerlink" title="2.4 AI 生成内容（AIGC）"></a>2.4 AI 生成内容（AIGC）</h3><p>近年来，人工智能技术在传媒领域的应用越来越广泛，包括：</p><ul><li><strong>文本生成</strong>（ChatGPT、GPT-4）：用于新闻写作、广告文案等。</li><li><strong>图像生成</strong>（Stable Diffusion、DALL·E）：用于艺术创作、广告设计等。</li><li><strong>视频生成</strong>（Runway、Synthesia）：用于虚拟主播、AI 视频制作。</li><li><strong>音频合成</strong>（ElevenLabs、DeepVoice）：用于配音、语音克隆。</li></ul><h2 id="3-传媒技术的未来发展"><a href="#3-传媒技术的未来发展" class="headerlink" title="3. 传媒技术的未来发展"></a>3. 传媒技术的未来发展</h2><ul><li><strong>AI + 传媒</strong>：人工智能驱动的内容生成将进一步降低制作成本，提高内容创作效率。</li><li><strong>XR（扩展现实）</strong>：虚拟现实（VR）、增强现实（AR）在传媒行业的应用将更加广泛。</li><li><strong>5G + 传媒</strong>：超高速网络将促进云端视频编辑、实时流媒体技术的发展。</li><li><strong>区块链 + 传媒</strong>：NFT、数字版权保护技术将影响内容分发模式。</li></ul><h2 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h2><p>传媒技术的发展不断推动信息传播的变革。从传统的编辑工具到 AI 生成内容（AIGC），科技正深刻改变媒体行业的运作方式，未来的传媒行业将更加智能化和自动化。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://ffmpeg.org/documentation.html">FFmpeg 官方文档</a></li><li><a href="https://www.adobe.com/products/premiere.html">Adobe Premiere Pro 官方网站</a></li><li><a href="https://stablediffusionweb.com/">Stable Diffusion 项目</a></li><li><a href="https://runwayml.com/">Runway AI 视频生成</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>数字媒体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>传媒技术</tag>
      
      <tag>数字媒体</tag>
      
      <tag>视频编辑</tag>
      
      <tag>音频处理</tag>
      
      <tag>AI 生成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序点餐系统</title>
    <link href="/2024/07/22/order/"/>
    <url>/2024/07/22/order/</url>
    
    <content type="html"><![CDATA[<h1 id="微信小程序点餐系统"><a href="#微信小程序点餐系统" class="headerlink" title="微信小程序点餐系统"></a>微信小程序点餐系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><p><strong>开发时间</strong>：2024.06 - 2024.07</p></li><li><p><strong>技术栈</strong>：Vue2 + Axios + Element UI + Uniapp + Echarts + UView + Uni UI + SpringBoot + MyBatis + MySQL。</p></li><li><p><strong>项目要求</strong>：<br>商家通过 PC 端管理菜品、类目、用户和订单，维持系统的正常运行。顾客通过微信小程序端查看菜品，快速下单、支付并跟踪订单，同时可以提交反馈。</p><p><img src="https://raw.githubusercontent.com/Sunnymasuping/img/main/%E5%95%86%E5%AE%B6%E7%AB%AF.jpeg" alt="商家端"><br><img src="https://raw.githubusercontent.com/Sunnymasuping/img/main/%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8A%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2.png" alt="客户端封面"></p></li></ul><h2 id="基于微信点餐系统的设计与实现"><a href="#基于微信点餐系统的设计与实现" class="headerlink" title="基于微信点餐系统的设计与实现"></a>基于微信点餐系统的设计与实现</h2><h3 id="1-总体设计"><a href="#1-总体设计" class="headerlink" title="1. 总体设计"></a>1. 总体设计</h3><h4 id="1-1-系统功能整体设计结构图"><a href="#1-1-系统功能整体设计结构图" class="headerlink" title="1.1 系统功能整体设计结构图"></a>1.1 系统功能整体设计结构图</h4><p><img src="https://raw.githubusercontent.com/Sunnymasuping/img/main/WPS%E5%9B%BE%E7%89%87(1).jpeg" alt="系统功能整体设计"></p><h4 id="1-2-系统架构设计"><a href="#1-2-系统架构设计" class="headerlink" title="1.2 系统架构设计"></a>1.2 系统架构设计</h4><h5 id="小程序端"><a href="#小程序端" class="headerlink" title="小程序端"></a><strong>小程序端</strong></h5><ul><li><strong>技术选型</strong>：Uniapp, UView, Uni UI</li><li><strong>功能</strong>：提供菜品浏览、下单支付、订单查看、反馈提交和个人信息修改功能。</li></ul><h5 id="商家管理平台"><a href="#商家管理平台" class="headerlink" title="商家管理平台"></a><strong>商家管理平台</strong></h5><ul><li><strong>技术选型</strong>：Vue 2, Axios, Element UI</li><li><strong>功能</strong>：提供用户管理、菜品管理、订单管理、轮播图管理、销售数据统计和登录功能。</li></ul><h5 id="后端服务"><a href="#后端服务" class="headerlink" title="后端服务"></a><strong>后端服务</strong></h5><ul><li><strong>技术选型</strong>：Spring Boot, MyBatis</li><li><strong>功能</strong>：提供 API 接口，处理业务逻辑，存储和管理数据，并保证系统安全与高性能。</li></ul><h4 id="1-3-功能模块划分"><a href="#1-3-功能模块划分" class="headerlink" title="1.3 功能模块划分"></a>1.3 功能模块划分</h4><p><strong>小程序端功能模块</strong></p><ol><li><strong>搜索菜品模块</strong>：提供菜品搜索功能。</li><li><strong>浏览菜品模块</strong>：展示所有菜品信息，按类别浏览。</li><li><strong>购物车模块</strong>：管理用户选择的菜品。</li><li><strong>订单模块</strong>：处理用户订单，支持下单和支付。</li><li><strong>反馈模块</strong>：用户提交反馈意见。</li><li><strong>个人信息模块</strong>：用户修改个人资料。</li></ol><p><strong>商家管理平台功能模块</strong></p><ol><li><strong>登录模块</strong>：管理员身份验证。</li><li><strong>统计模块</strong>：展示销售数据和报表。</li><li><strong>用户管理模块</strong>：管理用户信息。</li><li><strong>菜品类目管理模块</strong>：管理菜品分类。</li><li><strong>菜品信息管理模块</strong>：管理具体菜品信息。</li><li><strong>订单管理模块</strong>：处理和管理订单。</li><li><strong>轮播图管理模块</strong>：管理首页轮播图片。</li></ol><p><strong>后端服务功能模块</strong></p><ol><li><strong>用户管理模块</strong>：处理用户注册、登录和信息管理。</li><li><strong>菜品管理模块</strong>：处理菜品分类和信息管理。</li><li><strong>订单管理模块</strong>：处理订单的创建、更新和查询。</li><li><strong>统计分析模块</strong>：生成销售数据，用于图表展示。</li><li><strong>反馈管理模块</strong>：处理用户反馈信息。</li></ol><h3 id="1-4-数据库设计"><a href="#1-4-数据库设计" class="headerlink" title="1.4 数据库设计"></a>1.4 数据库设计</h3><h4 id="数据库商家信息表-表-3-1"><a href="#数据库商家信息表-表-3-1" class="headerlink" title="数据库商家信息表 (表 3.1)"></a>数据库商家信息表 (表 3.1)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>aid</td><td>管理员 ID</td></tr><tr><td>apwd</td><td>密码</td></tr><tr><td>aname</td><td>管理员名称</td></tr><tr><td>aphone</td><td>管理员电话</td></tr><tr><td>aaddress</td><td>商家地址</td></tr></tbody></table><h4 id="数据库顾客信息表-表-3-2"><a href="#数据库顾客信息表-表-3-2" class="headerlink" title="数据库顾客信息表 (表 3.2)"></a>数据库顾客信息表 (表 3.2)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>cid</td><td>顾客 ID</td></tr><tr><td>cpwd</td><td>密码</td></tr><tr><td>cname</td><td>顾客姓名</td></tr><tr><td>csex</td><td>顾客性别</td></tr><tr><td>cbirth</td><td>顾客生日</td></tr><tr><td>cphone</td><td>手机号</td></tr><tr><td>cstatus</td><td>审核状态</td></tr></tbody></table><h4 id="数据库菜单信息表-表-3-3"><a href="#数据库菜单信息表-表-3-3" class="headerlink" title="数据库菜单信息表 (表 3.3)"></a>数据库菜单信息表 (表 3.3)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>dishid</td><td>菜品 ID</td></tr><tr><td>dishName</td><td>菜品名称</td></tr><tr><td>type</td><td>菜品种类</td></tr><tr><td>specification</td><td>份量</td></tr><tr><td>price</td><td>菜品单价</td></tr><tr><td>picture</td><td>菜品图片地址</td></tr><tr><td>sale</td><td>菜品销量</td></tr></tbody></table><h4 id="数据库订单信息表-表-3-4"><a href="#数据库订单信息表-表-3-4" class="headerlink" title="数据库订单信息表 (表 3.4)"></a>数据库订单信息表 (表 3.4)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>oid</td><td>订单 ID</td></tr><tr><td>ocontent</td><td>订单内容</td></tr><tr><td>createtime</td><td>订单创建时间</td></tr><tr><td>overtime</td><td>订单完成时间</td></tr><tr><td>ostatus</td><td>订单状态</td></tr><tr><td>remark</td><td>备注</td></tr><tr><td>sum</td><td>总价</td></tr><tr><td>cid</td><td>顾客 ID</td></tr><tr><td>way</td><td>用餐方式（堂食，打包）</td></tr></tbody></table><h4 id="数据库留言信息表-表-3-5"><a href="#数据库留言信息表-表-3-5" class="headerlink" title="数据库留言信息表 (表 3.5)"></a>数据库留言信息表 (表 3.5)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>rid</td><td>留言 ID</td></tr><tr><td>rscore</td><td>评分（极差，差，中，良，好）</td></tr><tr><td>rcontent</td><td>留言内容</td></tr><tr><td>rtime</td><td>留言时间</td></tr><tr><td>cid</td><td>顾客 ID</td></tr></tbody></table><h4 id="数据库回复信息表-表-3-6"><a href="#数据库回复信息表-表-3-6" class="headerlink" title="数据库回复信息表 (表 3.6)"></a>数据库回复信息表 (表 3.6)</h4><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>pid</td><td>回复留言 ID</td></tr><tr><td>pcontent</td><td>回复内容</td></tr><tr><td>ptime</td><td>回复时间</td></tr><tr><td>cid</td><td>顾客 ID</td></tr><tr><td>aid</td><td>商家 ID</td></tr><tr><td>rid</td><td>留言 ID</td></tr></tbody></table><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/ordering-system">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>全栈开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
      <tag>Vue2</tag>
      
      <tag>Uniapp</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>MyBatis</tag>
      
      <tag>微信小程序</tag>
      
      <tag>数据可视化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汽车租赁系统的开发与设计</title>
    <link href="/2024/06/02/car-build/"/>
    <url>/2024/06/02/car-build/</url>
    
    <content type="html"><![CDATA[<h1 id="汽车租赁系统的开发与设计"><a href="#汽车租赁系统的开发与设计" class="headerlink" title="汽车租赁系统的开发与设计"></a>汽车租赁系统的开发与设计</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><p><strong>开发时间</strong>：2024.05 - 2024.06</p></li><li><p><strong>技术栈</strong>：</p><ul><li><strong>前端</strong>：JavaScript、HTML、CSS，结合 <strong>Ajax</strong> 实现交互。</li><li><strong>后端</strong>：基于 <strong>Node.js + Express</strong>，通过 <strong>Service 和 DAO 层</strong> 操作 <strong>MySQL</strong>，使用 <strong>Knex.js</strong> 构建 SQL。</li><li><strong>中间件</strong>：CORS、Morgan 等。</li></ul></li><li><p><strong>项目要求</strong>：</p><ul><li>打造 <strong>用户友好、安全可靠、可扩展且管理高效</strong> 的汽车租赁系统。</li><li>提供 <strong>车辆租赁核心服务</strong>，涵盖 <strong>用户、订单、车辆管理及系统配置</strong>。</li></ul></li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-前端界面与交互开发"><a href="#1-前端界面与交互开发" class="headerlink" title="1. 前端界面与交互开发"></a>1. 前端界面与交互开发</h3><ul><li>使用 <strong>HTML + CSS + JavaScript</strong> 构建租赁系统前端界面。</li><li>结合 <strong>Ajax</strong> 进行动态数据交互，实现订单提交、车辆查询、用户管理等功能。</li></ul><h3 id="2-后端业务实现"><a href="#2-后端业务实现" class="headerlink" title="2. 后端业务实现"></a>2. 后端业务实现</h3><ul><li><strong>Node.js + Express</strong> 处理业务逻辑，实现 <strong>用户、车辆、订单管理</strong>。</li><li>通过 <strong>Service 层</strong> 进行业务封装，<strong>DAO 层</strong> 操作 MySQL 数据库。</li><li>使用 <strong>Knex.js</strong> 构建 SQL 语句，提高数据库操作效率。</li></ul><h3 id="3-系统集成与优化"><a href="#3-系统集成与优化" class="headerlink" title="3. 系统集成与优化"></a>3. 系统集成与优化</h3><ul><li>结合 <strong>CORS</strong> 处理跨域请求，确保数据安全和访问稳定。</li><li>采用 <strong>Morgan</strong> 进行日志管理，监控系统运行状态。</li><li>参与 <strong>多环节测试</strong>，优化系统性能，提升用户体验。</li></ul><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/car">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>全栈开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
      <tag>Express</tag>
      
      <tag>MySQL</tag>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenCV 技术详解</title>
    <link href="/2024/04/03/opencv/"/>
    <url>/2024/04/03/opencv/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenCV-技术详解"><a href="#OpenCV-技术详解" class="headerlink" title="OpenCV 技术详解"></a>OpenCV 技术详解</h1><h2 id="1-OpenCV-简介"><a href="#1-OpenCV-简介" class="headerlink" title="1. OpenCV 简介"></a>1. OpenCV 简介</h2><p><strong>OpenCV</strong>（Open Source Computer Vision Library）是一个开源的计算机视觉和机器学习库，广泛用于图像处理、视频分析、物体识别、深度学习等领域。支持 <strong>C++、Python、Java</strong> 等多种编程语言，并可跨平台运行。</p><h2 id="2-OpenCV-安装"><a href="#2-OpenCV-安装" class="headerlink" title="2. OpenCV 安装"></a>2. OpenCV 安装</h2><h3 id="Python-环境"><a href="#Python-环境" class="headerlink" title="Python 环境"></a>Python 环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install opencv-python opencv-python-headless<br></code></pre></td></tr></table></figure><h3 id="C-环境（Linux）"><a href="#C-环境（Linux）" class="headerlink" title="C++ 环境（Linux）"></a>C++ 环境（Linux）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install libopencv-dev<br></code></pre></td></tr></table></figure><h2 id="3-OpenCV-主要功能"><a href="#3-OpenCV-主要功能" class="headerlink" title="3. OpenCV 主要功能"></a>3. OpenCV 主要功能</h2><p><img src="https://raw.githubusercontent.com/Sunnymasuping/img/main/OpenCV%E4%B8%BB%E8%A6%81%E6%A8%A1%E5%9D%97.png" alt="OpenCV 主要模块"></p><h3 id="3-1-图像处理"><a href="#3-1-图像处理" class="headerlink" title="3.1 图像处理"></a>3.1 图像处理</h3><ul><li><strong>读取、显示和保存图像</strong></li><li><strong>颜色空间转换</strong></li><li><strong>图像平滑与去噪</strong></li><li><strong>边缘检测（Canny 算法）</strong></li><li><strong>形态学变换（膨胀、腐蚀）</strong></li></ul><h3 id="3-2-计算机视觉"><a href="#3-2-计算机视觉" class="headerlink" title="3.2 计算机视觉"></a>3.2 计算机视觉</h3><ul><li><strong>人脸检测</strong></li><li><strong>物体识别</strong></li><li><strong>图像匹配</strong></li><li><strong>特征提取（SIFT, ORB）</strong></li><li><strong>目标跟踪</strong></li></ul><h2 id="4-代码示例"><a href="#4-代码示例" class="headerlink" title="4. 代码示例"></a>4. 代码示例</h2><h3 id="4-1-读取并显示图像（Python）"><a href="#4-1-读取并显示图像（Python）" class="headerlink" title="4.1 读取并显示图像（Python）"></a>4.1 读取并显示图像（Python）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># 读取图像</span><br>image = cv2.imread(<span class="hljs-string">&quot;image.jpg&quot;</span>)<br><br><span class="hljs-comment"># 显示图像</span><br>cv2.imshow(<span class="hljs-string">&quot;Display Image&quot;</span>, image)<br>cv2.waitKey(<span class="hljs-number">0</span>)<br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure><h3 id="4-2-边缘检测（Canny-算法）"><a href="#4-2-边缘检测（Canny-算法）" class="headerlink" title="4.2 边缘检测（Canny 算法）"></a>4.2 边缘检测（Canny 算法）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># 读取图像并转换为灰度</span><br>image = cv2.imread(<span class="hljs-string">&quot;image.jpg&quot;</span>, cv2.IMREAD_GRAYSCALE)<br><br><span class="hljs-comment"># Canny 边缘检测</span><br>edges = cv2.Canny(image, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>)<br><br><span class="hljs-comment"># 显示结果</span><br>cv2.imshow(<span class="hljs-string">&quot;Canny Edge Detection&quot;</span>, edges)<br>cv2.waitKey(<span class="hljs-number">0</span>)<br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure><h3 id="4-3-物体识别（Haar-级联分类器）"><a href="#4-3-物体识别（Haar-级联分类器）" class="headerlink" title="4.3 物体识别（Haar 级联分类器）"></a>4.3 物体识别（Haar 级联分类器）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># 载入预训练的级联分类器</span><br>face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + <span class="hljs-string">&#x27;haarcascade_frontalface_default.xml&#x27;</span>)<br><br><span class="hljs-comment"># 读取图像并转换为灰度</span><br>image = cv2.imread(<span class="hljs-string">&quot;face.jpg&quot;</span>)<br>gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)<br><br><span class="hljs-comment"># 进行人脸检测</span><br>faces = face_cascade.detectMultiScale(gray, <span class="hljs-number">1.3</span>, <span class="hljs-number">5</span>)<br><br><span class="hljs-comment"># 绘制矩形框</span><br><span class="hljs-keyword">for</span> (x, y, w, h) <span class="hljs-keyword">in</span> faces:<br>    cv2.rectangle(image, (x, y), (x + w, y + h), (<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">2</span>)<br><br><span class="hljs-comment"># 显示结果</span><br>cv2.imshow(<span class="hljs-string">&quot;Face Detection&quot;</span>, image)<br>cv2.waitKey(<span class="hljs-number">0</span>)<br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure><h2 id="5-OpenCV-性能优化"><a href="#5-OpenCV-性能优化" class="headerlink" title="5. OpenCV 性能优化"></a>5. OpenCV 性能优化</h2><ul><li><strong>使用多线程加速计算</strong></li><li><strong>利用 GPU（CUDA）加速</strong></li><li><strong>优化内存管理</strong></li><li><strong>合理使用 OpenCV 内置函数</strong></li></ul><h2 id="6-结论"><a href="#6-结论" class="headerlink" title="6. 结论"></a>6. 结论</h2><p>OpenCV 是计算机视觉领域的强大工具，提供丰富的图像处理与分析功能，适用于多种应用场景，如自动驾驶、人脸识别、医疗影像分析等。掌握 OpenCV，将大幅提升你的计算机视觉能力！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://docs.opencv.org/">OpenCV 官方文档</a></li><li><a href="https://github.com/opencv/opencv">GitHub - OpenCV</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机视觉</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机视觉</tag>
      
      <tag>OpenCV</tag>
      
      <tag>图像处理</tag>
      
      <tag>Python</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>仓储管理与文字分析系统</title>
    <link href="/2024/03/12/storetextlab/"/>
    <url>/2024/03/12/storetextlab/</url>
    
    <content type="html"><![CDATA[<h1 id="仓储管理与文字分析系统"><a href="#仓储管理与文字分析系统" class="headerlink" title="仓储管理与文字分析系统"></a>仓储管理与文字分析系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><strong>开发时间</strong>：2024.03 - 2024.04</li><li><strong>技术栈</strong>：Java、数据结构、算法。</li><li><strong>项目要求</strong>：<br>本系统包含两大功能模块：仓储管理与文字分析。仓储管理模块用于管理货品信息，支持货品的录入、售出、清除、修改等功能；文字分析模块用于对输入的文本进行字符统计，并支持指定单词计数和字符串替换。</li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-仓储管理功能实现"><a href="#1-仓储管理功能实现" class="headerlink" title="1. 仓储管理功能实现"></a>1. 仓储管理功能实现</h3><ul><li><strong>数据结构</strong>：采用单链表和顺序表分别实现货品信息管理。</li><li><strong>基本操作</strong>：包括：<ul><li><strong>查找货品</strong>：按货品 ID 或名称查找信息。</li><li><strong>收录货品</strong>：新增货品信息或更新库存。</li><li><strong>售出货品</strong>：减少库存，若库存为 0，则提示失败。</li><li><strong>清除货品</strong>：删除货品信息。</li><li><strong>修改货品信息</strong>：修改 ID、名称或定价。</li><li><strong>排序功能</strong>：根据定价或数量进行排序，分别使用冒泡排序和快速排序算法。</li></ul></li></ul><h3 id="2-文字分析功能实现"><a href="#2-文字分析功能实现" class="headerlink" title="2. 文字分析功能实现"></a>2. 文字分析功能实现</h3><ul><li><strong>字符统计</strong>：统计输入文本中的中文字符、英文字符、空格和数字数量。</li><li><strong>统计显示</strong>：输出中文字符、英文字符、数字、空格和总字数统计。</li><li><strong>单词计数</strong>：统计指定单词在文本中出现的次数。</li><li><strong>字符串替换</strong>：实现替换指定子串的功能。</li><li><strong>数据结构</strong>：采用线性表作为存储结构。</li></ul><h2 id="功能实现细节"><a href="#功能实现细节" class="headerlink" title="功能实现细节"></a>功能实现细节</h2><h3 id="1-仓储管理系统"><a href="#1-仓储管理系统" class="headerlink" title="1. 仓储管理系统"></a>1. 仓储管理系统</h3><h4 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 仓储管理组件</span><br><span class="hljs-keyword">import</span> &#123; useState, useEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">WarehouseManagement</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [inventory, setInventory] = <span class="hljs-title function_">useState</span>([]);<br>  <span class="hljs-keyword">const</span> [newProduct, setNewProduct] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">null</span>);<br><br>  <span class="hljs-comment">// 获取货品信息</span><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&quot;/api/getInventory&quot;</span>)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">response</span>) =&gt;</span> response.<span class="hljs-title function_">json</span>())<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-title function_">setInventory</span>(data));<br>  &#125;, []);<br><br>  <span class="hljs-comment">// 添加货品</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">addProduct</span> = (<span class="hljs-params">product</span>) =&gt; &#123;<br>    <span class="hljs-title function_">setInventory</span>(<span class="hljs-function">(<span class="hljs-params">prev</span>) =&gt;</span> [...prev, product]);<br>  &#125;;<br><br>  <span class="hljs-comment">// 售出货品</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">sellProduct</span> = (<span class="hljs-params">id, quantity</span>) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> updatedInventory = inventory.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">id</span> === id) &#123;<br>        item.<span class="hljs-property">quantity</span> -= quantity;<br>        <span class="hljs-keyword">if</span> (item.<span class="hljs-property">quantity</span> &lt; <span class="hljs-number">0</span>) item.<span class="hljs-property">quantity</span> = <span class="hljs-number">0</span>;<br>      &#125;<br>      <span class="hljs-keyword">return</span> item;<br>    &#125;);<br>    <span class="hljs-title function_">setInventory</span>(updatedInventory);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>仓储管理<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> addProduct(newProduct)&#125;&gt;添加货品<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> sellProduct(102, 20)&#125;&gt;售出货品<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">        &#123;inventory.map((product) =&gt; (</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;product.id&#125;</span>&gt;</span></span><br><span class="language-xml">            &#123;product.name&#125; - 库存: &#123;product.quantity&#125;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        ))&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li><strong>单链表</strong>：适用于频繁插入和删除操作。</li><li><strong>顺序表</strong>：适用于查询操作频繁的场景。</li></ul><h3 id="2-文字分析处理系统"><a href="#2-文字分析处理系统" class="headerlink" title="2. 文字分析处理系统"></a>2. 文字分析处理系统</h3><h4 id="功能实现-1"><a href="#功能实现-1" class="headerlink" title="功能实现"></a>功能实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 文字分析组件</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">TextAnalysis</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [text, setText] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&quot;&quot;</span>);<br>  <span class="hljs-keyword">const</span> [statistics, setStatistics] = <span class="hljs-title function_">useState</span>(&#123;&#125;);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">countChars</span> = (<span class="hljs-params">inputText</span>) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> stats = &#123;<br>      <span class="hljs-attr">chinese</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">english</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">digits</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">spaces</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">total</span>: inputText.<span class="hljs-property">length</span>,<br>    &#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> char <span class="hljs-keyword">of</span> inputText) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/[\u4e00-\u9fa5]/</span>.<span class="hljs-title function_">test</span>(char)) stats.<span class="hljs-property">chinese</span>++;<br>      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/[a-zA-Z]/</span>.<span class="hljs-title function_">test</span>(char)) stats.<span class="hljs-property">english</span>++;<br>      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/\d/</span>.<span class="hljs-title function_">test</span>(char)) stats.<span class="hljs-property">digits</span>++;<br>      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/\s/</span>.<span class="hljs-title function_">test</span>(char)) stats.<span class="hljs-property">spaces</span>++;<br>    &#125;<br>    <span class="hljs-title function_">setStatistics</span>(stats);<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">replaceSubstring</span> = (<span class="hljs-params">text, find, replace</span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> text.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(find, <span class="hljs-string">&quot;g&quot;</span>), replace);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>文字分析<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;text&#125;</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> setText(e.target.value)&#125; /&gt;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> countChars(text)&#125;&gt;统计字符<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>中文字符: &#123;statistics.chinese&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>英文字符: &#123;statistics.english&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>数字: &#123;statistics.digits&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>空格: &#123;statistics.spaces&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>总字数: &#123;statistics.total&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>替换后的文本: &#123;replaceSubstring(text, &quot;你好&quot;, &quot;世界&quot;)&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li><strong>线性表</strong>：用于存储和处理字符数据。</li></ul><h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><h4 id="仓储管理模块"><a href="#仓储管理模块" class="headerlink" title="仓储管理模块"></a>仓储管理模块</h4><table><thead><tr><th>操作</th><th>输入数据</th><th>期望输出</th><th>实际输出</th></tr></thead><tbody><tr><td>查找货品</td><td>输入 ID: 101 或 货品名: “笔记本”</td><td>显示货品信息</td><td>通过测试</td></tr><tr><td>收录货品</td><td>新增货品，ID: 102, 名称: “鼠标”, 定价: 30, 数量: 100</td><td>添加成功</td><td>通过测试</td></tr><tr><td>售出货品</td><td>输入 ID: 102, 售出数量: 20</td><td>库存减少，剩余 80</td><td>通过测试</td></tr><tr><td>删除货品</td><td>删除 ID: 102</td><td>货品信息删除成功</td><td>通过测试</td></tr><tr><td>排序货品</td><td>按定价排序，按数量排序</td><td>排序成功</td><td>通过测试</td></tr></tbody></table><h4 id="文字分析模块"><a href="#文字分析模块" class="headerlink" title="文字分析模块"></a>文字分析模块</h4><table><thead><tr><th>操作</th><th>输入数据</th><th>期望输出</th><th>实际输出</th></tr></thead><tbody><tr><td>字符统计</td><td>输入文本：<code>&quot;Hello 你好 123&quot;</code></td><td>中文字符: 2, 英文字符: 5, 数字: 3, 空格: 1, 总字数: 11</td><td>通过测试</td></tr><tr><td>单词计数</td><td>输入单词 <code>&quot;Hello&quot;</code> 查找文本 <code>&quot;Hello 你好 123 Hello&quot;</code></td><td>2 次</td><td>通过测试</td></tr><tr><td>字符替换</td><td>输入文本 <code>&quot;Hello 你好&quot;</code>, 替换 <code>&quot;你好&quot;</code> 为 <code>&quot;世界&quot;</code></td><td>输出 <code>&quot;Hello 世界&quot;</code></td><td>通过测试</td></tr></tbody></table><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>本系统成功实现了仓储管理和文字分析的基本功能，能够高效地管理货品信息并进行文字分析处理。通过测试，各功能模块均能正常运行，后续可进行优化和扩展，如增加图形化界面、改进排序算法等。</p><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/YourUsername/storetextlab">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>数据处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>算法</tag>
      
      <tag>文字处理</tag>
      
      <tag>仓储管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多模态感知技术概述</title>
    <link href="/2024/03/02/sensing/"/>
    <url>/2024/03/02/sensing/</url>
    
    <content type="html"><![CDATA[<h1 id="多模态感知技术概述"><a href="#多模态感知技术概述" class="headerlink" title="多模态感知技术概述"></a>多模态感知技术概述</h1><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h2><p>多模态感知（Multimodal Perception）技术是人工智能（AI）领域的重要研究方向，旨在通过融合多种数据模态（如图像、文本、语音、视频、传感器数据等）来提升机器的理解能力。随着深度学习的发展，多模态感知在计算机视觉、自然语言处理、自动驾驶、医疗诊断等领域得到了广泛应用。</p><h2 id="2-多模态感知的基本概念"><a href="#2-多模态感知的基本概念" class="headerlink" title="2. 多模态感知的基本概念"></a>2. 多模态感知的基本概念</h2><h3 id="2-1-模态定义"><a href="#2-1-模态定义" class="headerlink" title="2.1 模态定义"></a>2.1 模态定义</h3><p>在人工智能中，模态（Modality）指的是数据的不同类型，例如：</p><ul><li><strong>视觉模态</strong>：图像、视频<br><img src="https://github.com/Sunnymasuping/img/blob/main/%E8%A7%86%E9%A2%91%E6%A8%A1%E6%80%81.jpg?raw=true" alt="视觉模态"></li><li><strong>文本模态</strong>：自然语言文本、代码<br><img src="https://github.com/Sunnymasuping/img/blob/main/%E6%96%87%E6%9C%AC%E6%A8%A1%E6%80%81.jpg?raw=true" alt="文本模态"></li><li><strong>语音模态</strong>：语音信号、音频数据<br><img src="https://github.com/Sunnymasuping/img/blob/main/%E9%9F%B3%E9%A2%91%E6%A8%A1%E6%80%81.jpg?raw=true" alt="多模态感知概览"></li><li><strong>传感器模态</strong>：雷达、激光雷达（LiDAR）、加速度计等</li></ul><h3 id="2-2-多模态学习"><a href="#2-2-多模态学习" class="headerlink" title="2.2 多模态学习"></a>2.2 多模态学习</h3><p>多模态学习（Multimodal Learning）是指利用多个模态的数据进行联合建模的方法。主要包括：</p><ul><li><strong>模态对齐（Modality Alignment）</strong>：不同模态数据的时序或语义对齐</li><li><strong>模态融合（Modality Fusion）</strong>：跨模态信息的融合，提高模型的表达能力</li><li><strong>模态翻译（Modality Translation）</strong>：从一种模态生成另一种模态（如文本生成图像、图像生成文本）</li></ul><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E5%A4%9A%E6%A8%A1%E6%80%81.jpg?raw=true" alt="多模态"></p><h2 id="3-多模态感知的核心技术"><a href="#3-多模态感知的核心技术" class="headerlink" title="3. 多模态感知的核心技术"></a>3. 多模态感知的核心技术</h2><h3 id="3-1-特征表示"><a href="#3-1-特征表示" class="headerlink" title="3.1 特征表示"></a>3.1 特征表示</h3><ul><li><strong>单独学习（Independent Representation）</strong>：各模态数据独立表示</li><li><strong>共享表示（Shared Representation）</strong>：不同模态共享一个特征空间</li><li><strong>跨模态转换（Cross-modal Transformation）</strong>：将一种模态的数据转换到另一种模态</li></ul><h3 id="3-2-模态融合方法"><a href="#3-2-模态融合方法" class="headerlink" title="3.2 模态融合方法"></a>3.2 模态融合方法</h3><ul><li><strong>早期融合（Early Fusion）</strong>：在输入阶段融合特征，如拼接图像和文本的向量</li><li><strong>中期融合（Intermediate Fusion）</strong>：在模型的中间层进行模态交互</li><li><strong>后期融合（Late Fusion）</strong>：在最终决策阶段融合不同模态的预测结果</li></ul><h3 id="3-3-典型神经网络架构"><a href="#3-3-典型神经网络架构" class="headerlink" title="3.3 典型神经网络架构"></a>3.3 典型神经网络架构</h3><ul><li><strong>多模态 Transformer</strong>（如 CLIP、BLIP、Flamingo）</li><li><strong>多流 CNN（Multi-stream CNN）</strong>：针对不同模态分别训练 CNN 进行特征提取</li><li><strong>循环神经网络（RNN, LSTM, GRU）</strong>：用于处理时间序列数据的多模态信息</li></ul><h2 id="4-多模态感知的应用场景"><a href="#4-多模态感知的应用场景" class="headerlink" title="4. 多模态感知的应用场景"></a>4. 多模态感知的应用场景</h2><h3 id="4-1-计算机视觉与自然语言处理"><a href="#4-1-计算机视觉与自然语言处理" class="headerlink" title="4.1 计算机视觉与自然语言处理"></a>4.1 计算机视觉与自然语言处理</h3><ul><li><strong>图文匹配</strong>（Image-Text Matching）：如 CLIP、ALIGN</li><li><strong>图像描述生成</strong>（Image Captioning）：如 BLIP、Show and Tell</li><li><strong>视觉问答（VQA）</strong>：基于图像回答自然语言问题</li></ul><h3 id="4-2-语音与文本处理"><a href="#4-2-语音与文本处理" class="headerlink" title="4.2 语音与文本处理"></a>4.2 语音与文本处理</h3><ul><li><strong>语音识别（ASR）</strong>：将语音转换为文本</li><li><strong>语音合成（TTS）</strong>：将文本转换为语音</li><li><strong>跨模态翻译（Cross-modal Translation）</strong>：如视频字幕自动生成</li></ul><h3 id="4-3-自动驾驶"><a href="#4-3-自动驾驶" class="headerlink" title="4.3 自动驾驶"></a>4.3 自动驾驶</h3><ul><li><strong>环境感知</strong>：融合摄像头、雷达、LiDAR 数据</li><li><strong>目标检测</strong>：多传感器数据协同识别行人、车辆等</li></ul><h3 id="4-4-医疗影像分析"><a href="#4-4-医疗影像分析" class="headerlink" title="4.4 医疗影像分析"></a>4.4 医疗影像分析</h3><ul><li><strong>医学图像与文本报告结合</strong>：提高诊断准确率</li><li><strong>智能病历生成</strong>：结合语音和文本进行自动记录</li></ul><h2 id="5-未来发展趋势"><a href="#5-未来发展趋势" class="headerlink" title="5. 未来发展趋势"></a>5. 未来发展趋势</h2><ul><li><strong>更高效的跨模态学习方法</strong>：减少数据对齐和模态融合的计算成本</li><li><strong>大规模多模态预训练模型</strong>：如 GPT-4V, Gemini</li><li><strong>可解释性与可信 AI</strong>：提高模型决策的透明度和可解释性</li><li><strong>低资源环境下的多模态学习</strong>：针对小样本和边缘设备优化模型</li></ul><h2 id="6-结论"><a href="#6-结论" class="headerlink" title="6. 结论"></a>6. 结论</h2><p>多模态感知技术正推动人工智能向更强的理解能力发展。未来，该技术将在更多应用场景中发挥重要作用，并带来更多创新的 AI 解决方案。</p><hr>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>人工智能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自然语言处理</tag>
      
      <tag>多模态</tag>
      
      <tag>计算机视觉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息系统编码与实现 —— 在线考试系统</title>
    <link href="/2024/02/22/testsystem/"/>
    <url>/2024/02/22/testsystem/</url>
    
    <content type="html"><![CDATA[<h1 id="在线考试系统"><a href="#在线考试系统" class="headerlink" title="在线考试系统"></a>在线考试系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><strong>项目要求</strong>：<br>本系统允许管理员管理题目、角色、试卷以及学生信息。学生通过系统进行在线考试，提交答案后显示得分，并支持错题回顾。</li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-项目管理与架构"><a href="#1-项目管理与架构" class="headerlink" title="1. 项目管理与架构"></a>1. 项目管理与架构</h3><ul><li><strong>项目计划</strong>：制定开发计划，跟踪进度，确保项目按时完成并稳定部署。</li><li><strong>技术选型</strong>：<ul><li>前端：使用 <strong>HTML、CSS、JavaScript</strong> 进行页面设计。</li><li>后端：使用 <strong>Java</strong> 和 <strong>MySQL</strong> 搭建服务端。</li><li>数据库：采用 <strong>MySQL</strong> 进行数据存储。</li></ul></li></ul><h3 id="2-功能实现"><a href="#2-功能实现" class="headerlink" title="2. 功能实现"></a>2. 功能实现</h3><ul><li><strong>用户管理</strong>：管理员可以管理学生、角色，进行用户信息的增删改查。</li><li><strong>角色管理</strong>：管理员可以编辑和查询不同角色的信息。</li><li><strong>题目与试卷管理</strong>：管理员可以管理题目，添加、查看、删除试题，编辑试卷。</li><li><strong>学生考试界面</strong>：学生可以查看试卷、答题，提交后查看得分，并回顾错题。</li><li><strong>系统测试与优化</strong>：进行系统的单元测试、集成测试以及确认测试，确保系统的稳定性和功能完整性。</li></ul><h3 id="3-系统测试"><a href="#3-系统测试" class="headerlink" title="3. 系统测试"></a>3. 系统测试</h3><h4 id="3-1-系统测试可能遇到的问题"><a href="#3-1-系统测试可能遇到的问题" class="headerlink" title="3.1 系统测试可能遇到的问题"></a>3.1 系统测试可能遇到的问题</h4><ol><li><strong>功能不完整或逻辑错误</strong>：由于需求分析不清或者开发过程中的误解，测试过程中可能会发现功能缺失或错误。</li><li><strong>性能问题</strong>：在负载较大或者特定条件下，可能会出现系统响应时间过长或资源占用过多等问题。</li><li><strong>安全性漏洞</strong>：系统可能存在安全漏洞，如数据泄露或未经授权访问等，需要进行安全性测试。</li></ol><h4 id="3-2-测试方法"><a href="#3-2-测试方法" class="headerlink" title="3.2 测试方法"></a>3.2 测试方法</h4><h5 id="3-2-1-单元测试"><a href="#3-2-1-单元测试" class="headerlink" title="3.2.1 单元测试"></a>3.2.1 单元测试</h5><table><thead><tr><th>用户名</th><th>密码</th><th>预期结果</th></tr></thead><tbody><tr><td>空值</td><td>11111</td><td>登录失败</td></tr><tr><td>zs</td><td>空值</td><td>登录失败</td></tr><tr><td>zz</td><td>11111</td><td>登录失败</td></tr><tr><td>zs</td><td>11112</td><td>登录失败</td></tr><tr><td>zs</td><td>11111</td><td>登录成功</td></tr></tbody></table><h5 id="3-2-2-集成测试"><a href="#3-2-2-集成测试" class="headerlink" title="3.2.2 集成测试"></a>3.2.2 集成测试</h5><p>集成测试主要验证各个模块间的交互是否正常工作。由于各模块之间联系较少，单独测试后，一般不会出现问题。</p><h5 id="3-2-3-确认测试"><a href="#3-2-3-确认测试" class="headerlink" title="3.2.3 确认测试"></a>3.2.3 确认测试</h5><p>将系统交由教师和学生进行试用，确认各功能模块是否满足实际需求，并记录问题。</p><hr><h3 id="4-测试用例"><a href="#4-测试用例" class="headerlink" title="4. 测试用例"></a>4. 测试用例</h3><h4 id="4-1-用户登录测试"><a href="#4-1-用户登录测试" class="headerlink" title="4.1 用户登录测试"></a>4.1 用户登录测试</h4><table><thead><tr><th>测试用例描述</th><th>测试数据</th><th>期望输出</th><th>实际输出</th></tr></thead><tbody><tr><td>用户名错误是否能登录</td><td>用户名输入 <code>zz</code></td><td>登录失败</td><td>登录失败</td></tr><tr><td>密码错误是否能登录</td><td>密码输入 <code>11112</code></td><td>登录失败</td><td>登录失败</td></tr><tr><td>全部正确是否能登录</td><td>用户名 <code>zs</code>，密码 <code>11111</code></td><td>登录成功</td><td>登录成功</td></tr></tbody></table><h4 id="4-2-用户管理测试"><a href="#4-2-用户管理测试" class="headerlink" title="4.2 用户管理测试"></a>4.2 用户管理测试</h4><table><thead><tr><th>操作</th><th>输入数据</th><th>期望输出</th><th>实际输出</th></tr></thead><tbody><tr><td>添加用户</td><td><code>学生, qs, 11111, 钱三, 正常</code></td><td>添加成功</td><td>通过测试</td></tr><tr><td>修改用户</td><td>修改 <code>qs</code> 的信息</td><td>修改成功</td><td>通过测试</td></tr><tr><td>查询用户</td><td>查询 <code>qs</code></td><td>查询出钱三的信息</td><td>通过测试</td></tr></tbody></table><h4 id="4-3-试题管理测试"><a href="#4-3-试题管理测试" class="headerlink" title="4.3 试题管理测试"></a>4.3 试题管理测试</h4><table><thead><tr><th>操作</th><th>输入数据</th><th>期望输出</th><th>实际输出</th></tr></thead><tbody><tr><td>添加试题</td><td>录入新试题</td><td>试题添加成功</td><td>通过测试</td></tr><tr><td>修改试题</td><td>更改试题内容</td><td>试题修改成功</td><td>通过测试</td></tr><tr><td>删除试题</td><td>删除一条试题</td><td>试题删除成功</td><td>通过测试</td></tr></tbody></table><hr><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5. 结论"></a>5. 结论</h2><p>经过完整的编码和测试，本系统已实现所有基本功能，并能够稳定运行。后续可以进一步优化界面交互和系统性能，以提高用户体验。</p><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/testsystem">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>系统设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>Java</tag>
      
      <tag>IDEA</tag>
      
      <tag>信息系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教师评价考核系统</title>
    <link href="/2023/12/21/Feedback-build/"/>
    <url>/2023/12/21/Feedback-build/</url>
    
    <content type="html"><![CDATA[<h1 id="教师评价考核系统"><a href="#教师评价考核系统" class="headerlink" title="教师评价考核系统"></a>教师评价考核系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><p><strong>开发时间</strong>：2023.11 - 2023.12</p></li><li><p><strong>技术栈</strong>：</p><ul><li><strong>前端</strong>：Vue + Axios + HTML + JavaScript</li><li><strong>后端</strong>：Servlet + JavaBean + Filter + Listener + MVC</li><li><strong>数据库</strong>：MySQL，结合 JDBC 操作数据</li><li><strong>模板引擎</strong>：Thymeleaf</li><li><strong>安全与优化</strong>：Filter 防攻击、Listener 监听与优化</li></ul></li><li><p><strong>项目要求</strong>：</p><ul><li>搭建 <strong>教学管理系统</strong>，支持 <strong>管理员、教师、学生</strong> 三类用户角色。</li><li><strong>管理员</strong> 负责 <strong>课程、教师、学生及评教指标管理</strong>。</li><li><strong>教师</strong> 可 <strong>查看课程评分与学生评价</strong>。</li><li><strong>学生</strong> 进行 <strong>教师评价、查看公告、留言</strong>。</li><li><strong>系统支持用户权限管理</strong>，生成 <strong>数据统计报表</strong>。</li></ul></li></ul><h2 id="3-教师评价考核系统模块设计与实现"><a href="#3-教师评价考核系统模块设计与实现" class="headerlink" title="3. 教师评价考核系统模块设计与实现"></a>3. 教师评价考核系统模块设计与实现</h2><h3 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h3><h4 id="3-1-1-管理员功能需求"><a href="#3-1-1-管理员功能需求" class="headerlink" title="3.1.1 管理员功能需求"></a>3.1.1 管理员功能需求</h4><ul><li><strong>课程管理</strong>：添加、编辑和删除课程信息（课程名称、授课教师、学分、课程类别等）。</li><li><strong>教师管理</strong>：维护教师信息，包括添加、编辑、删除教师账号及授课信息。</li><li><strong>学生管理</strong>：管理学生账号和选课信息，确保数据完整性。</li><li><strong>评教指标管理</strong>：定义评教指标，包括名称、权重、评分标准等。</li></ul><h4 id="3-1-2-教师功能需求"><a href="#3-1-2-教师功能需求" class="headerlink" title="3.1.2 教师功能需求"></a>3.1.2 教师功能需求</h4><ul><li><strong>查看课程评分</strong>：查询所授课程的评分情况。</li><li><strong>查看学生评价</strong>：查看学生对课程的评分和文字反馈。</li><li><strong>公告通知查看</strong>：浏览系统公告，了解最新的教学评估信息。</li></ul><h4 id="3-1-3-学生功能需求"><a href="#3-1-3-学生功能需求" class="headerlink" title="3.1.3 学生功能需求"></a>3.1.3 学生功能需求</h4><ul><li><strong>评价教师</strong>：对教师授课质量、教学态度、课程内容等进行评分和评论。</li><li><strong>查看公告栏</strong>：获取教学相关通知。</li><li><strong>留言功能</strong>：向教师或管理员留言反馈意见。</li></ul><h4 id="3-1-4-公共功能需求"><a href="#3-1-4-公共功能需求" class="headerlink" title="3.1.4 公共功能需求"></a>3.1.4 公共功能需求</h4><ul><li><strong>用户认证与权限管理</strong>：不同角色用户拥有不同访问权限。</li><li><strong>系统公告发布</strong>：管理员发布公告，确保信息有效传达。</li><li><strong>数据备份与恢复</strong>：定期备份数据，确保系统稳定。</li></ul><h3 id="3-2-总体设计"><a href="#3-2-总体设计" class="headerlink" title="3.2 总体设计"></a>3.2 总体设计</h3><h4 id="3-2-1-系统整体结构"><a href="#3-2-1-系统整体结构" class="headerlink" title="3.2.1 系统整体结构"></a>3.2.1 系统整体结构</h4><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E6%95%99%E5%B8%88.png" alt="系统架构"></p><h4 id="3-2-2-数据库设计"><a href="#3-2-2-数据库设计" class="headerlink" title="3.2.2 数据库设计"></a>3.2.2 数据库设计</h4><ol><li><p><strong>实体关系建模</strong>：</p><ul><li><strong>管理员、教师、学生</strong>：包含账号、姓名、联系方式等。</li><li><strong>课程</strong>：包括课程名称、学分、授课教师等。</li><li><strong>评教指标</strong>：指标内容、权重等信息。</li><li><strong>系统公告</strong>：公告标题、内容和发布时间。</li></ul></li><li><p><strong>表之间的关联</strong>：</p><ul><li><strong>学生选课表、教师任课表</strong>：关联学生选课和教师授课信息。</li><li><strong>学生评教表</strong>：记录学生对课程和教师的评价。</li></ul></li><li><p><strong>数据完整性和规范性</strong>：</p><ul><li>采用 <strong>主键、外键、唯一键</strong> 约束，确保数据一致性。</li><li>课程、教师、学生数据具备完整性约束。</li></ul></li><li><p><strong>应用功能需求导向</strong>：</p><ul><li><strong>用户权限管理</strong>：管理员、教师、学生数据分级管理。</li><li><strong>课程管理</strong>：记录课程基本信息，关联教师授课情况。</li><li><strong>学生评教功能</strong>：记录学生对教师的评分及评论。</li><li><strong>系统公告功能</strong>：存储系统公告信息，支持公告管理。</li></ul></li></ol><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E6%95%99%E5%B8%88%E6%80%BB%E4%BD%93%E7%BB%93%E6%9E%84.png" alt="数据库设计"></p><h3 id="3-3-核心功能实现"><a href="#3-3-核心功能实现" class="headerlink" title="3.3 核心功能实现"></a>3.3 核心功能实现</h3><h4 id="3-3-1-用户管理"><a href="#3-3-1-用户管理" class="headerlink" title="3.3.1 用户管理"></a>3.3.1 用户管理</h4><ul><li><p><strong>登录认证</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">authenticateUser</span><span class="hljs-params">(String username, String password)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SELECT * FROM users WHERE username = ? AND password = ?&quot;</span>;<br>    <span class="hljs-keyword">try</span> (<span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> DBUtil.getConnection();<br>         <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">pstmt</span> <span class="hljs-operator">=</span> conn.prepareStatement(sql)) &#123;<br>        pstmt.setString(<span class="hljs-number">1</span>, username);<br>        pstmt.setString(<span class="hljs-number">2</span>, password);<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">rs</span> <span class="hljs-operator">=</span> pstmt.executeQuery();<br>        <span class="hljs-keyword">return</span> rs.next();<br>    &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>角色权限管理</strong>：不同角色访问不同的页面。</p></li></ul><h4 id="3-3-2-课程管理"><a href="#3-3-2-课程管理" class="headerlink" title="3.3.2 课程管理"></a>3.3.2 课程管理</h4><ul><li><strong>管理员可增删改查课程信息</strong>。</li><li><strong>教师查看所授课程</strong>。</li><li><strong>学生选择课程</strong>。</li></ul><h4 id="3-3-3-评教系统"><a href="#3-3-3-评教系统" class="headerlink" title="3.3.3 评教系统"></a>3.3.3 评教系统</h4><ul><li><strong>学生提交评分与评论</strong>。</li><li><strong>教师查看课程评分及学生评价</strong>。</li></ul><h4 id="3-3-4-公告管理"><a href="#3-3-4-公告管理" class="headerlink" title="3.3.4 公告管理"></a>3.3.4 公告管理</h4><ul><li><strong>管理员发布公告</strong>。</li><li><strong>教师与学生查看公告</strong>。</li></ul><h3 id="3-4-安全与优化"><a href="#3-4-安全与优化" class="headerlink" title="3.4 安全与优化"></a>3.4 安全与优化</h3><ul><li><strong>Filter 过滤</strong>：防止 SQL 注入和 XSS 攻击。</li><li><strong>Listener 监听</strong>：监控用户会话，优化系统性能。</li><li><strong>数据库索引</strong>：提升查询速度。</li><li><strong>数据备份</strong>：定期备份数据库，防止数据丢失。</li></ul><p><img src="https://github.com/Sunnymasuping/img/blob/main/%E6%95%99%E5%B8%88%E7%95%8C%E9%9D%A2.png" alt="系统界面展示"></p><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/Feedback">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
      <tag>Vue</tag>
      
      <tag>Java</tag>
      
      <tag>Servlet</tag>
      
      <tag>Thymeleaf</tag>
      
      <tag>教学管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RSC技术文档</title>
    <link href="/2023/10/06/rsc/"/>
    <url>/2023/10/06/rsc/</url>
    
    <content type="html"><![CDATA[<h1 id="RSC-理念"><a href="#RSC-理念" class="headerlink" title="RSC 理念"></a>RSC 理念</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>React 组件的可能的状态：前端交互（RCC，React Client Component，如：按钮的隐藏或出现），后端请求（RSC，React Server Component，如：数据获取与消费）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [data, update] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">null</span>);<br><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">fetch</span>(url).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> <span class="hljs-title function_">update</span>(res.<span class="hljs-title function_">json</span>()));<br>  &#125;, []);<br><br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Ctn</span> <span class="hljs-attr">data</span>=<span class="hljs-string">&#123;data&#125;</span> /&gt;</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// 从数据库获取数据</span><br>  <span class="hljs-keyword">const</span> data = <span class="hljs-title function_">getDataFromDB</span>();<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Ctn</span> <span class="hljs-attr">data</span>=<span class="hljs-string">&#123;data&#125;</span> /&gt;</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>RSC 的理念：根据状态类型，划分组件类型，RCC 在前端运行，RSC 在后端运行。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>带有 <code>.server.js(x)</code> 后缀的文件导出的是 RSC</li><li>带有 <code>.client.js(x)</code> 后缀的文件导出的是 RCC</li><li>没有带 server 或 client 后缀的文件导出的是通用组件</li><li>RCC 中是不允许 import RSC 的</li></ul><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><h3 id="RSC-与-SSR，CSR"><a href="#RSC-与-SSR，CSR" class="headerlink" title="RSC 与 SSR，CSR"></a>RSC 与 SSR，CSR</h3><ul><li><strong>SSR</strong>：Server Side Render 服务端渲染，通过服务端渲染生成，传回 HTML，浏览器直接显示</li><li><strong>CSR</strong>：Client Side Render 客户端渲染</li></ul><p>SSR 传回客户端的是纯的 HTML，在经过 JS 加载，成为了客户端的应用程序，除了首页的纯 HTML，所有组件仍属于客户端。</p><p>RSC 始终在服务端，同时以组件的形式存在，结合数据消费进行展现。</p><p>对于 SEO 来说，SSR 更容易搜索以及爬取，而 RSC 并不是 SEO 的最优选择。</p><h3 id="RSC-与-SSG"><a href="#RSC-与-SSG" class="headerlink" title="RSC 与 SSG"></a>RSC 与 SSG</h3><ul><li><strong>SSG</strong>：Static Site Generation 页面静态化</li></ul><p>SSG：在构建的时候直接把结果页面输出 html 到磁盘，每次访问直接把 html 返回给客户端，相当于一个静态资源，SSG 易搜索以及爬取。</p><p>RSC：服务端组件渲染，动态渲染。</p><h2 id="RSC-协议"><a href="#RSC-协议" class="headerlink" title="RSC 协议"></a>RSC 协议</h2><p>RSC 看作一种 rpc（Remote Procedure Call，远程过程调用）协议的实现。数据传输的两端分别是「React 后端运行时」与「React 前端运行时」。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">ClientCpn</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./ClientCpn.client&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ServerCpn</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./ServerCpn.server&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">OuterServerCpn</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ClientCpn</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">ServerCpn</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">ClientCpn</span>&gt;</span></span><br>  )<br>&#125;<br><br><span class="hljs-comment">// ClientCpn.client.jsx</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">&#123;children&#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;children&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>&#125;<br><br><span class="hljs-comment">// ServerCpn.server.jsx</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>服务端组件<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">M1<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;./src/ClientCpn.client.js&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;chunks&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;client1&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br>J0<span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;className&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;main&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;@1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;服务端组件&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h3 id="数据的序列化与反序列化"><a href="#数据的序列化与反序列化" class="headerlink" title="数据的序列化与反序列化"></a>数据的序列化与反序列化</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">//[标记]代表这行的数据类型，比如J代表「组件树」，M代表「一个RCC的引用」，S代表Suspense</span><br><span class="hljs-comment">//id代表这行数据对应的id。</span><br><span class="hljs-comment">//JSON数据保存了这行具体的数据。</span><br><br><span class="hljs-punctuation">[</span><br>  <span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;className&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;main&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;@1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>          <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;服务端组件&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h3 id="ID-映射"><a href="#ID-映射" class="headerlink" title="ID 映射"></a>ID 映射</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// @1 :引用id为1的RCC数据</span><br><span class="hljs-comment">// M1 ：M为RCC类型组件，id为1</span><br><br><span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>  <span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;@1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;$&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;children&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;服务端组件&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment">//引用</span><br>M1<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;./src/ClientCpn.client.js&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;chunks&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;client1&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a>传输协议</h2><p>「RSC 协议」直接基于「HTTP 协议」实现，其 Content-Type 为 <code>text/x-component</code>。</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>应用程序小且简单</li><li>不会运行前端服务器，存在少或不用数据的应用，静态应用</li></ul><h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><p>搜索引擎优化，利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。</p><p>SEO 的工作原理：网页在被请求的时候，从服务器发出的内容可以被搜索引擎的爬虫爬到数据，这个时候从搜索引擎搜索的关键字包含在这些内容中，那么这个网址的信息就更容易显示在搜索结果中。</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>技术文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
      <tag>RSC</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Websocket &amp; WebRTC 技术文档</title>
    <link href="/2023/04/28/webrtc/"/>
    <url>/2023/04/28/webrtc/</url>
    
    <content type="html"><![CDATA[<h1 id="Websocket-WebRTC-技术文档"><a href="#Websocket-WebRTC-技术文档" class="headerlink" title="Websocket &amp; WebRTC 技术文档"></a>Websocket &amp; WebRTC 技术文档</h1><h2 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>服务器主动推送到客户端</li><li>双端通信</li><li>即时通讯</li></ul><h3 id="其他即时通讯的方法"><a href="#其他即时通讯的方法" class="headerlink" title="其他即时通讯的方法"></a>其他即时通讯的方法</h3><ol><li><strong>定期轮询</strong></li><li><strong>SSE（服务器推送事件，单向）</strong></li><li><strong>Comet 技术（长连接）</strong></li></ol><h3 id="如何创建-WebSocket"><a href="#如何创建-WebSocket" class="headerlink" title="如何创建 WebSocket"></a>如何创建 WebSocket</h3><p>WebSocket 的建立流程包括：</p><ol><li>TCP 三次握手创建连接</li><li>默认使用 HTTP 进行一次通信</li><li>使用 HTTP 请求进行协议升级，创建 WebSocket 连接</li></ol><p><img src="https://github.com/Sunnymasuping/img/blob/main/p9POf4H.png?raw=true" alt="websocket"></p><h3 id="WebSocket-的特点"><a href="#WebSocket-的特点" class="headerlink" title="WebSocket 的特点"></a>WebSocket 的特点</h3><ul><li>WebSocket 中所有发送的数据使用帧的形式发送。客户端发送的数据帧都要经过掩码处理，服务端发送的所有数据帧不能经过掩码处理。</li><li>WebSocket 连接必须是一个直接连接。</li><li>WebSocket 连接建立后，通信双方都可以在任何时刻向另一方发送数据。</li><li>WebSocket 连接建立后，数据传输使用帧来传递，不再需要 Request 消息。</li><li>WebSocket 的数据帧是有序的。</li></ul><h4 id="帧类型："><a href="#帧类型：" class="headerlink" title="帧类型："></a>帧类型：</h4><ol><li><strong>Opcode &#x3D;&#x3D; 0 继续：</strong><br>表示此帧是一个继续帧，需要拼接在上一个收到的帧之后，来组成一个完整的消息。</li><li><strong>Opcode &#x3D;&#x3D; 1 文本帧：</strong><br>表示文本数据。</li><li><strong>Opcode &#x3D;&#x3D; 2 二进制帧：</strong><br>表示二进制数据。</li><li><strong>Opcode &#x3D;&#x3D; 8 关闭连接：</strong><br>发送此帧的一方表示关闭连接。</li><li><strong>Opcode &#x3D;&#x3D; 9 Ping：</strong><br>一方发送 Ping 帧，另一方应立即响应 Pong。</li><li><strong>Opcode &#x3D;&#x3D; 10 Pong：</strong><br>Pong 帧响应 Ping 请求。</li></ol><h3 id="WebSocket-vs-HTTP-协议"><a href="#WebSocket-vs-HTTP-协议" class="headerlink" title="WebSocket vs HTTP 协议"></a>WebSocket vs HTTP 协议</h3><ul><li><strong>HTTP 协议是半双工</strong>，WebSocket 是全双工。</li><li>HTTP 协议是客户端主动发送请求，服务端响应；而 WebSocket 支持服务端主动推送信息给客户端。</li><li>WebSocket 允许双向通信，不需要每次请求都重新建立连接。</li></ul><h3 id="WebSocket-的优缺点"><a href="#WebSocket-的优缺点" class="headerlink" title="WebSocket 的优缺点"></a>WebSocket 的优缺点</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ul><li><strong>跨域通信（CORS）</strong>，使得不同域之间可以直接通讯。</li><li><strong>跨平台兼容性</strong>，支持 Web 和移动设备。</li><li><strong>低延迟</strong>，能够保持持久连接，适合高频交互。</li><li><strong>异步任务处理</strong>，打破传统请求响应模式。</li></ul><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><ul><li>可能存在隐私数据泄露问题。</li><li>客户端与服务端的加密和数据保护问题。</li></ul><hr><h2 id="WebRTC"><a href="#WebRTC" class="headerlink" title="WebRTC"></a>WebRTC</h2><h3 id="WebRTC-是什么"><a href="#WebRTC-是什么" class="headerlink" title="WebRTC 是什么"></a>WebRTC 是什么</h3><p>WebRTC（Web Real-Time Communication）是基于浏览器的实时通信技术，允许浏览器之间直接进行音频、视频以及数据的传输。</p><h3 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>私人会议系统</li><li>直播</li><li>视频通信、实时数据传输</li></ul><h3 id="WebRTC-的优缺点"><a href="#WebRTC-的优缺点" class="headerlink" title="WebRTC 的优缺点"></a>WebRTC 的优缺点</h3><h4 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h4><ul><li><strong>无需安装软件</strong>，可以直接通过浏览器进行通信。</li><li>使用现代音频（Opus）和视频编解码器（VP8，H.264），提供高质量数据传输。</li><li><strong>自动调整视频或音频质量</strong>，根据网络环境进行优化。</li><li>使用 <strong>TLS 和 SRTP 协议进行数据加密</strong>，保障连接安全。</li><li>开源软件，支持无限制控制接口，适合嵌入到 Web 应用中。</li></ul><h4 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h4><ul><li>需要视频会议服务器来混合多个音视频流。</li><li>解决方案之间缺乏兼容性，不同 WebRTC 应用之间可能无法互通。</li><li>必须购买订阅服务器进行音视频流的混合处理。</li></ul><h3 id="WebRTC-架构"><a href="#WebRTC-架构" class="headerlink" title="WebRTC 架构"></a>WebRTC 架构</h3><h4 id="点对点（P2P）"><a href="#点对点（P2P）" class="headerlink" title="点对点（P2P）"></a>点对点（P2P）</h4><ul><li>两个浏览器之间直接传送媒体内容。</li><li>优点：开发简单，成本低，安全性高。</li></ul><h4 id="多点控制单元（MCU）"><a href="#多点控制单元（MCU）" class="headerlink" title="多点控制单元（MCU）"></a>多点控制单元（MCU）</h4><ul><li>多个用户发送数据流。架构对每个流进行解码、重新组合后再发送给用户。</li><li>优点：适合大型会议，确保每个参与者都能收到优化后的媒体流。</li></ul><h4 id="选择性转发单元（SFU）"><a href="#选择性转发单元（SFU）" class="headerlink" title="选择性转发单元（SFU）"></a>选择性转发单元（SFU）</h4><ul><li>媒体流先发送到集中式服务器，服务器转发给其他用户。</li><li>优点：高度可扩展，适合带宽条件差的网络环境。</li></ul><h3 id="WebRTC-端-API"><a href="#WebRTC-端-API" class="headerlink" title="WebRTC 端 API"></a>WebRTC 端 API</h3><ul><li>使用前提：在安全源中访问</li></ul><p><img src="https://github.com/Sunnymasuping/img/blob/main/p9E90BQ.png?raw=true" alt="secure"></p><h2 id="WebRTC-与-WebSocket-的区别"><a href="#WebRTC-与-WebSocket-的区别" class="headerlink" title="WebRTC 与 WebSocket 的区别"></a>WebRTC 与 WebSocket 的区别</h2><ul><li><strong>开发环境</strong>：WebSockets 支持 Java、JMS 和 C++，而 WebRTC 主要使用 Java 和 HTML。</li><li><strong>安全性</strong>：WebRTC 提供更高的安全性。</li><li><strong>浏览器支持</strong>：WebRTC 目前只支持部分浏览器，而 WebSockets 几乎所有主流浏览器都支持。</li><li><strong>会话管理</strong>：WebSocket 每个会话都有一个服务端对应，而 WebRTC 则是点对点的连接。</li><li><strong>传输类型</strong>：WebRTC 专为高性能的音视频传输设计，而 WebSocket 用于通用的数据传输。</li></ul><hr><h2 id="前端开发工程化"><a href="#前端开发工程化" class="headerlink" title="前端开发工程化"></a>前端开发工程化</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><ul><li>提高生产效率，解放开发人员。</li></ul><h3 id="前端开发内容："><a href="#前端开发内容：" class="headerlink" title="前端开发内容："></a>前端开发内容：</h3><ul><li>处理静态资源和动态资源。</li><li>使用 JavaScript 实现前端业务逻辑。</li><li>编写 HTML 模板，生成动态页面。</li><li>使用 Node.js 实现中间层 Web 服务。</li><li>完成前端单元测试和项目部署。</li></ul><h3 id="前端项目结构"><a href="#前端项目结构" class="headerlink" title="前端项目结构"></a>前端项目结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">|-- undefined<br>    |-- .browserslistrc<br>    |-- .gitignore<br>    |-- babel.config.js<br>    |-- jsconfig.json<br>    |-- package-lock.json<br>    |-- package.json<br>    |-- README.md<br>    |-- vue.config.js<br>    |-- node_modules // 安装的依赖包<br>    |-- public // 公共静态资源<br>    |   |-- favicon.ico<br>    |   |-- index.html<br>    |   |-- robots.txt<br>    |   |-- img<br>    |-- src<br>        |-- App.vue // 顶层路由<br>        |-- main.js // Vue 入口<br>        |-- registerServiceWorker.js<br>        |-- assets // 静态资源<br>        |   |-- logo.png<br>        |-- components // 公共组件<br>        |   |-- Bottom.vue<br>        |   |-- Menu.vue<br>        |   |-- Top.vue<br>        |-- router // 路由配置<br>        |   |-- index.js<br>        |-- store // Vuex<br>        |   |-- index.js<br>        |-- views // 路由文件<br>            |-- AddTemplate.vue<br>            |-- HomeView.vue<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>Websocket</tag>
      
      <tag>WebRTC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 安装流程</title>
    <link href="/2023/03/24/hexo-build/"/>
    <url>/2023/03/24/hexo-build/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-安装流程"><a href="#Hexo-安装流程" class="headerlink" title="Hexo 安装流程"></a>Hexo 安装流程</h1><p>Hexo 是一个快速、简洁且高效的博客框架，基于 Node.js 构建，使用 Markdown 格式进行内容编辑，支持主题和插件扩展，适用于搭建个人博客。</p><p>以下是安装 Hexo 的详细步骤。</p><h2 id="1-安装-Node-js-和-npm"><a href="#1-安装-Node-js-和-npm" class="headerlink" title="1. 安装 Node.js 和 npm"></a>1. 安装 Node.js 和 npm</h2><p>Hexo 依赖 Node.js 环境，因此你需要先安装 Node.js 和 npm（Node.js 的包管理工具）。</p><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><ol><li>访问 Node.js 官方网站：<a href="https://nodejs.org/">https://nodejs.org</a></li><li>下载并安装 LTS 版本的 Node.js。</li><li>安装完成后，打开命令行工具，运行以下命令检查安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure></li></ol><p>如果 Node.js 和 npm 安装成功，你会看到类似以下的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">v16.x.x<br>8.x.x<br></code></pre></td></tr></table></figure><h2 id="2-安装-Hexo"><a href="#2-安装-Hexo" class="headerlink" title="2. 安装 Hexo"></a>2. 安装 Hexo</h2><p>Hexo 可以通过 npm 安装。打开命令行工具，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装完成后，你可以通过以下命令检查 Hexo 是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>成功安装后，你应该看到类似下面的版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo: 5.0.0<br>os: Windows 10 x64<br>node: 16.x.x<br>v8: 9.x.x<br></code></pre></td></tr></table></figure><h2 id="3-创建-Hexo-博客"><a href="#3-创建-Hexo-博客" class="headerlink" title="3. 创建 Hexo 博客"></a>3. 创建 Hexo 博客</h2><p>安装 Hexo 后，你可以通过以下命令创建一个新的博客目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;your-blog-name&gt;<br></code></pre></td></tr></table></figure><p>这将会在当前目录下创建一个名为 <code>&lt;your-blog-name&gt;</code> 的文件夹，并初始化 Hexo 项目。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>进入到博客目录后，运行以下命令安装项目所需的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> &lt;your-blog-name&gt;<br>npm install<br></code></pre></td></tr></table></figure><h2 id="4-启动-Hexo-本地服务器"><a href="#4-启动-Hexo-本地服务器" class="headerlink" title="4. 启动 Hexo 本地服务器"></a>4. 启动 Hexo 本地服务器</h2><p>在 Hexo 项目目录下，使用以下命令启动本地开发服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>启动后，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>，你应该能看到 Hexo 的默认博客页面。</p><h2 id="5-配置博客"><a href="#5-配置博客" class="headerlink" title="5. 配置博客"></a>5. 配置博客</h2><p>你可以编辑 Hexo 配置文件 <code>_config.yml</code> 来修改博客的设置，包括站点名称、描述、作者信息等。以下是一些常用配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">My</span> <span class="hljs-string">Blog</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">My</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">my</span> <span class="hljs-string">blog</span> <span class="hljs-string">built</span> <span class="hljs-string">with</span> <span class="hljs-string">Hexo</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">Your</span> <span class="hljs-string">Name</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">en</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">Asia/Shanghai</span><br></code></pre></td></tr></table></figure><h2 id="6-发布博客到-GitHub-Pages"><a href="#6-发布博客到-GitHub-Pages" class="headerlink" title="6. 发布博客到 GitHub Pages"></a>6. 发布博客到 GitHub Pages</h2><p>如果你想将 Hexo 博客部署到 GitHub Pages，可以按照以下步骤进行配置。</p><h3 id="配置-config-yml-文件"><a href="#配置-config-yml-文件" class="headerlink" title="配置 _config.yml 文件"></a>配置 <code>_config.yml</code> 文件</h3><p>在 Hexo 项目的 &#96;_config</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>[object Object]</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue 技术文档</title>
    <link href="/2023/03/16/vue/"/>
    <url>/2023/03/16/vue/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue-技术文档"><a href="#Vue-技术文档" class="headerlink" title="Vue 技术文档"></a>Vue 技术文档</h1><h2 id="简介：Vue-是什么？"><a href="#简介：Vue-是什么？" class="headerlink" title="简介：Vue 是什么？"></a>简介：Vue 是什么？</h2><p>Vue 是一个用于构建用户界面的渐进式 JavaScript 框架。Vue 可以自底向上逐层应用，逐步引入，不需要一开始就重构整个应用。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h3><p>Vue 将页面的 HTML、CSS 和 JS 代码封装在一个组件中，可以被其他组件或页面重复使用。组件化能够有效地将一个庞大复杂的前端工程拆分成一个个独立的、可重复使用的组件，大大提高了开发效率。</p><h3 id="声明式编码"><a href="#声明式编码" class="headerlink" title="声明式编码"></a>声明式编码</h3><h4 id="命令式："><a href="#命令式：" class="headerlink" title="命令式："></a>命令式：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 需要手动控制 DOM 更新的方式</span><br></code></pre></td></tr></table></figure><h4 id="声明式："><a href="#声明式：" class="headerlink" title="声明式："></a>声明式：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Vue 会根据数据的变化自动更新视图 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="虚拟-DOM-和-DIFF-算法"><a href="#虚拟-DOM-和-DIFF-算法" class="headerlink" title="虚拟 DOM 和 DIFF 算法"></a>虚拟 DOM 和 DIFF 算法</h3><p>Vue 使用虚拟 DOM 来优化 DOM 操作，避免了频繁的直接操作 DOM，提升了性能。通过 DIFF 算法，Vue 只会更新变动的部分，进一步提高了渲染效率。</p><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p>Vue 实例会经历一系列生命周期钩子函数，开发者可以在这些钩子函数中插入自定义代码。例如：<code>created</code>、<code>mounted</code>、<code>updated</code> 等。</p><h2 id="MVVM-模型"><a href="#MVVM-模型" class="headerlink" title="MVVM 模型"></a>MVVM 模型</h2><ul><li><strong>M (Model)</strong>：模型层，通常指 <code>data</code> 数据</li><li><strong>V (View)</strong>：视图层，通常指模板</li><li><strong>VM (ViewModel)</strong>：视图模型，即 Vue 实例对象，负责将模型与视图进行绑定</li></ul><p>通过数据绑定和 DOM 监听，Vue 实现了视图与数据的双向绑定。</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>组件化开发：易于维护和复用。</li><li>响应式数据绑定：自动更新视图。</li><li>虚拟 DOM：提高性能。</li><li>渐进式框架：可以逐步集成。</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>学习曲线：对于初学者来说可能需要一定时间理解 Vue 的响应式原理。</li><li>不适合非常复杂的应用：当应用非常庞大时，性能和维护性可能会遇到问题。</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>, <span class="hljs-comment">// 挂载点</span><br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-comment">// 数据</span><br>    <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;Hello Vue!&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">computed</span>: &#123;<br>    <span class="hljs-comment">// 计算属性</span><br>    <span class="hljs-attr">name</span>: &#123;<br>      <span class="hljs-title function_">getter</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">message</span>;<br>      &#125;,<br>      <span class="hljs-title function_">setter</span>(<span class="hljs-params">value</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">message</span> = value;<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-comment">// 方法</span><br>    <span class="hljs-title function_">fname</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 函数逻辑</span><br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">watch</span>: &#123;<br>    <span class="hljs-comment">// 监视器</span><br>    <span class="hljs-title function_">message</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Message changed from <span class="hljs-subst">$&#123;oldVal&#125;</span> to <span class="hljs-subst">$&#123;newVal&#125;</span>`</span>);<br>    &#125;,<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="计算属性简写"><a href="#计算属性简写" class="headerlink" title="计算属性简写"></a>计算属性简写</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">computed</span>: &#123;<br>  <span class="hljs-title function_">fname</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 只有 getter 时简写为函数形式</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><h4 id="插值语法"><a href="#插值语法" class="headerlink" title="插值语法"></a>插值语法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="指令语法"><a href="#指令语法" class="headerlink" title="指令语法"></a>指令语法</h4><ul><li><code>v-bind</code>：用于绑定 HTML 属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-bind:href</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>v-model</code>：双向数据绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>简写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>v-on</code>：绑定事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;clickHandler&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><p>简写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>v-show</code>：控制元素的显示与隐藏</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;isVisible&quot;</span>&gt;</span>This is visible<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Vue-实例的挂载"><a href="#Vue-实例的挂载" class="headerlink" title="Vue 实例的挂载"></a>Vue 实例的挂载</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><p>简写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">v.$mount(<span class="hljs-string">&quot;#app&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><ul><li>滚轮事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> @<span class="hljs-attr">wheel</span>=<span class="hljs-string">&quot;handleWheel&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>滚动条事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> @<span class="hljs-attr">scroll</span>=<span class="hljs-string">&quot;handleScroll&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="属性添加与配置可枚举"><a href="#属性添加与配置可枚举" class="headerlink" title="属性添加与配置可枚举"></a>属性添加与配置可枚举</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(object, <span class="hljs-string">&quot;key&quot;</span>, &#123;<br>  <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>,<br>  <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="methods-中函数传参"><a href="#methods-中函数传参" class="headerlink" title="methods 中函数传参"></a>methods 中函数传参</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;fname($event, &#x27;param&#x27;)&quot;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">methods</span>: &#123;<br>  <span class="hljs-title function_">fname</span>(<span class="hljs-params">event, param</span>) &#123;<br>    <span class="hljs-comment">// 处理事件和参数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="监视器"><a href="#监视器" class="headerlink" title="监视器"></a>监视器</h2><h3 id="监视属性变化"><a href="#监视属性变化" class="headerlink" title="监视属性变化"></a>监视属性变化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">watch</span>: &#123;<br>  <span class="hljs-title function_">message</span>(<span class="hljs-params">newValue, oldValue</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Message changed from <span class="hljs-subst">$&#123;oldValue&#125;</span> to <span class="hljs-subst">$&#123;newValue&#125;</span>`</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>简写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">watch</span>: &#123;<br>  <span class="hljs-title function_">message</span>(<span class="hljs-params">newValue</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newValue);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">watch</span>: &#123;<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">// 打开深度监视</span><br>    <span class="hljs-title function_">handler</span>(<span class="hljs-params">newValue, oldValue</span>) &#123;<br>      <span class="hljs-comment">// 处理深度监视变化</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><ul><li><code>prevent</code>：阻止默认事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>stop</code>：阻止事件冒泡</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>once</code>：事件只触发一次</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>capture</code>：使用事件捕获模式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>self</code>：只有 <code>event.target</code> 是当前元素时才触发事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;handleClick&quot;</span>&gt;</span>Click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><ul><li>回车事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> @<span class="hljs-attr">keyup.enter</span>=<span class="hljs-string">&quot;handleEnter&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><ul><li>空格事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> @<span class="hljs-attr">keyup.space</span>=<span class="hljs-string">&quot;handleSpace&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h2 id="class-和-style-绑定"><a href="#class-和-style-绑定" class="headerlink" title="class 和 style 绑定"></a>class 和 style 绑定</h2><h3 id="class-绑定"><a href="#class-绑定" class="headerlink" title="class 绑定"></a>class 绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;className&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>动态绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;[&#x27;class1&#x27;, &#x27;class2&#x27;]&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="style-绑定"><a href="#style-绑定" class="headerlink" title="style 绑定"></a>style 绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123; fontSize: fontSize + &#x27;px&#x27; &#125;&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>前端框架</category>
      
      <category>技术文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>前端框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人工智能技术概述</title>
    <link href="/2022/03/27/ai-concept/"/>
    <url>/2022/03/27/ai-concept/</url>
    
    <content type="html"><![CDATA[<h1 id="人工智能技术概述"><a href="#人工智能技术概述" class="headerlink" title="人工智能技术概述"></a>人工智能技术概述</h1><h2 id="一、什么是人工智能？"><a href="#一、什么是人工智能？" class="headerlink" title="一、什么是人工智能？"></a>一、什么是人工智能？</h2><p>人工智能（Artificial Intelligence, AI）是计算机科学的一个分支，致力于通过模拟人类的思维、学习、推理和决策过程，使机器能够执行通常需要人类智能的任务。随着计算机硬件的进步和大数据的普及，人工智能技术得到了广泛应用，涵盖了图像识别、语音识别、自然语言处理、自动驾驶等多个领域。</p><h2 id="二、人工智能的核心技术"><a href="#二、人工智能的核心技术" class="headerlink" title="二、人工智能的核心技术"></a>二、人工智能的核心技术</h2><h3 id="1-机器学习"><a href="#1-机器学习" class="headerlink" title="1. 机器学习"></a>1. 机器学习</h3><p>机器学习（Machine Learning, ML）是人工智能的一个重要分支，通过算法和统计模型让计算机从数据中进行自我学习和改进，而无需明确编程。常见的机器学习算法包括：</p><ul><li><strong>监督学习</strong>：通过标记数据进行训练，如分类和回归任务。</li><li><strong>无监督学习</strong>：从未标记数据中发现隐藏的模式，如聚类分析。</li><li><strong>强化学习</strong>：通过与环境互动，不断学习最优策略。</li></ul><h3 id="2-深度学习"><a href="#2-深度学习" class="headerlink" title="2. 深度学习"></a>2. 深度学习</h3><p>深度学习（Deep Learning）是机器学习的一个子领域，基于人工神经网络，尤其是多层神经网络（也称为深度神经网络）。深度学习模型在图像识别、自然语言处理等任务中取得了突破性进展。著名的深度学习框架包括：</p><ul><li><strong>TensorFlow</strong></li><li><strong>PyTorch</strong></li><li><strong>Keras</strong></li></ul><h3 id="3-自然语言处理"><a href="#3-自然语言处理" class="headerlink" title="3. 自然语言处理"></a>3. 自然语言处理</h3><p>自然语言处理（Natural Language Processing, NLP）是人工智能中研究人类语言与计算机交互的技术，涉及到语音识别、文本分析、机器翻译等。NLP 的核心技术包括：</p><ul><li><strong>分词与词性标注</strong></li><li><strong>情感分析</strong></li><li><strong>机器翻译</strong></li><li><strong>文本生成</strong></li></ul><h3 id="4-计算机视觉"><a href="#4-计算机视觉" class="headerlink" title="4. 计算机视觉"></a>4. 计算机视觉</h3><p>计算机视觉（Computer Vision）使机器能够通过摄像头或图像传感器“看到”并理解图像或视频的内容。常见应用包括面部识别、目标检测、自动驾驶等。计算机视觉的核心技术包括：</p><ul><li><strong>图像分类</strong></li><li><strong>目标检测</strong></li><li><strong>图像分割</strong></li></ul><h2 id="三、人工智能的应用"><a href="#三、人工智能的应用" class="headerlink" title="三、人工智能的应用"></a>三、人工智能的应用</h2><h3 id="1-自动驾驶"><a href="#1-自动驾驶" class="headerlink" title="1. 自动驾驶"></a>1. 自动驾驶</h3><p>自动驾驶技术利用人工智能进行路径规划、障碍物检测、环境感知等任务，已经在许多汽车公司和技术公司中得到了广泛的应用。</p><h3 id="2-智能客服"><a href="#2-智能客服" class="headerlink" title="2. 智能客服"></a>2. 智能客服</h3><p>智能客服系统基于自然语言处理技术，能够理解用户的查询并给出准确的答案，广泛应用于电商平台、金融服务和在线支持系统中。</p><h3 id="3-人脸识别"><a href="#3-人脸识别" class="headerlink" title="3. 人脸识别"></a>3. 人脸识别</h3><p>人脸识别技术利用计算机视觉和深度学习，识别和验证人脸图像，应用广泛，包括手机解锁、安全监控和身份认证等。</p><h3 id="4-健康医疗"><a href="#4-健康医疗" class="headerlink" title="4. 健康医疗"></a>4. 健康医疗</h3><p>AI 在健康医疗领域的应用越来越多，主要应用包括医学影像分析、疾病预测、个性化治疗方案推荐等。</p><h2 id="四、人工智能的未来发展趋势"><a href="#四、人工智能的未来发展趋势" class="headerlink" title="四、人工智能的未来发展趋势"></a>四、人工智能的未来发展趋势</h2><h3 id="1-无监督学习的进展"><a href="#1-无监督学习的进展" class="headerlink" title="1. 无监督学习的进展"></a>1. 无监督学习的进展</h3><p>未来，AI 将越来越依赖于无监督学习技术，不需要大量标注数据，能在更多的场景中进行自主学习。</p><h3 id="2-联邦学习与隐私保护"><a href="#2-联邦学习与隐私保护" class="headerlink" title="2. 联邦学习与隐私保护"></a>2. 联邦学习与隐私保护</h3><p>随着隐私保护的要求日益增加，联邦学习等分布式学习方法将成为 AI 发展的重要趋势，允许各个参与方在保护数据隐私的前提下共同训练模型。</p><h3 id="3-量子计算与-AI-结合"><a href="#3-量子计算与-AI-结合" class="headerlink" title="3. 量子计算与 AI 结合"></a>3. 量子计算与 AI 结合</h3><p>量子计算具有强大的计算能力，未来 AI 可能与量子计算相结合，在处理海量数据和复杂任务时能大大提升效率。</p><h3 id="4-自然语言理解的突破"><a href="#4-自然语言理解的突破" class="headerlink" title="4. 自然语言理解的突破"></a>4. 自然语言理解的突破</h3><p>尽管当前的 NLP 技术已经取得显著进展，但如何让机器真正理解人类语言的深层意义和语境仍然是一个挑战。未来，AI 在语义理解方面将取得更多突破。</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>人工智能已经逐渐渗透到我们的生活中，成为推动科技进步的重要力量。从基础的机器学习到深度学习，再到更复杂的自然语言处理和计算机视觉，AI 的技术应用正在不断发展。未来，随着技术的不断进步，人工智能有望带来更广泛的变革，改变我们的生活和工作方式。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>技术文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能</tag>
      
      <tag>机器学习</tag>
      
      <tag>深度学习</tag>
      
      <tag>自然语言处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/20/hello-world/"/>
    <url>/2022/02/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
