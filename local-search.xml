<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微信小程序点餐系统</title>
    <link href="/2024/07/22/orderfood-build%20/"/>
    <url>/2024/07/22/orderfood-build%20/</url>
    
    <content type="html"><![CDATA[<h1 id="微信小程序点餐系统"><a href="#微信小程序点餐系统" class="headerlink" title="微信小程序点餐系统"></a>微信小程序点餐系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><strong>开发时间</strong>：2024.06 - 2024.07</li><li><strong>技术栈</strong>：Vue2 + Axios + Element UI + Uniapp + Echarts + UView + Uni UI + SpringBoot + MyBatis + MySQL。</li><li><strong>项目要求</strong>：<br>商家通过 PC 端管理菜品、类目、用户和订单，维持系统的正常运行。顾客通过微信小程序端查看菜品，快速下单、支付并跟踪订单，同时可以提交反馈。</li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-项目管理与架构"><a href="#1-项目管理与架构" class="headerlink" title="1. 项目管理与架构"></a>1. 项目管理与架构</h3><ul><li><strong>项目计划</strong>：制定开发计划，跟踪进度，确保项目按时高质量完成并稳定部署。</li><li><strong>技术选型</strong>：<ul><li>前端：使用 <strong>UView + Uniapp</strong> 开发微信小程序。</li><li>后端：使用 <strong>SpringBoot + MyBatis</strong> 搭建服务端。</li><li>数据库：采用 <strong>MySQL</strong> 进行数据存储。</li></ul></li></ul><h3 id="2-小程序功能实现"><a href="#2-小程序功能实现" class="headerlink" title="2. 小程序功能实现"></a>2. 小程序功能实现</h3><ul><li><strong>订单管理</strong>：开发用户下单、支付、订单跟踪界面。</li><li><strong>数据可视化</strong>：集成 <strong>Echarts</strong> 展示数据统计。</li><li><strong>界面优化</strong>：使用 <strong>UView + Uni UI</strong> 提高用户体验，提供反馈与个人信息管理功能。</li></ul><h3 id="3-商家管理平台"><a href="#3-商家管理平台" class="headerlink" title="3. 商家管理平台"></a>3. 商家管理平台</h3><ul><li><strong>管理后台</strong>：<ul><li><strong>Vue2 + Element UI</strong> 实现商家后台界面。</li><li>支持 <strong>数据统计、用户管理、订单管理</strong>。</li><li>轮播图管理功能，支持 <strong>实时更新</strong>。</li></ul></li><li><strong>数据库操作</strong>：<ul><li>采用 <strong>MyBatis</strong> 进行数据库操作，确保数据高效管理。</li></ul></li></ul><h2 id="项目展示"><a href="#项目展示" class="headerlink" title="项目展示"></a>项目展示</h2><p><img src="https://github.com/Sunnymasuping/img/blob/main/miniapp_demo.png?raw=true" alt="小程序界面"></p><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/miniapp-order-system">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>全栈开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
      <tag>Vue2</tag>
      
      <tag>Uniapp</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>MyBatis</tag>
      
      <tag>微信小程序</tag>
      
      <tag>数据可视化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汽车租赁系统的开发与设计</title>
    <link href="/2024/06/02/car-build/"/>
    <url>/2024/06/02/car-build/</url>
    
    <content type="html"><![CDATA[<h1 id="汽车租赁系统的开发与设计"><a href="#汽车租赁系统的开发与设计" class="headerlink" title="汽车租赁系统的开发与设计"></a>汽车租赁系统的开发与设计</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><p><strong>开发时间</strong>：2024.05 - 2024.06</p></li><li><p><strong>技术栈</strong>：</p><ul><li><strong>前端</strong>：JavaScript、HTML、CSS，结合 <strong>Ajax</strong> 实现交互。</li><li><strong>后端</strong>：基于 <strong>Node.js + Express</strong>，通过 <strong>Service 和 DAO 层</strong> 操作 <strong>MySQL</strong>，使用 <strong>Knex.js</strong> 构建 SQL。</li><li><strong>中间件</strong>：CORS、Morgan 等。</li></ul></li><li><p><strong>项目要求</strong>：</p><ul><li>打造 <strong>用户友好、安全可靠、可扩展且管理高效</strong> 的汽车租赁系统。</li><li>提供 <strong>车辆租赁核心服务</strong>，涵盖 <strong>用户、订单、车辆管理及系统配置</strong>。</li></ul></li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-前端界面与交互开发"><a href="#1-前端界面与交互开发" class="headerlink" title="1. 前端界面与交互开发"></a>1. 前端界面与交互开发</h3><ul><li>使用 <strong>HTML + CSS + JavaScript</strong> 构建租赁系统前端界面。</li><li>结合 <strong>Ajax</strong> 进行动态数据交互，实现订单提交、车辆查询、用户管理等功能。</li></ul><h3 id="2-后端业务实现"><a href="#2-后端业务实现" class="headerlink" title="2. 后端业务实现"></a>2. 后端业务实现</h3><ul><li><strong>Node.js + Express</strong> 处理业务逻辑，实现 <strong>用户、车辆、订单管理</strong>。</li><li>通过 <strong>Service 层</strong> 进行业务封装，<strong>DAO 层</strong> 操作 MySQL 数据库。</li><li>使用 <strong>Knex.js</strong> 构建 SQL 语句，提高数据库操作效率。</li></ul><h3 id="3-系统集成与优化"><a href="#3-系统集成与优化" class="headerlink" title="3. 系统集成与优化"></a>3. 系统集成与优化</h3><ul><li>结合 <strong>CORS</strong> 处理跨域请求，确保数据安全和访问稳定。</li><li>采用 <strong>Morgan</strong> 进行日志管理，监控系统运行状态。</li><li>参与 <strong>多环节测试</strong>，优化系统性能，提升用户体验。</li></ul><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/car">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
      <category>全栈开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
      <tag>Express</tag>
      
      <tag>MySQL</tag>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教师评价考核系统</title>
    <link href="/2023/12/21/Feedback-build/"/>
    <url>/2023/12/21/Feedback-build/</url>
    
    <content type="html"><![CDATA[<h1 id="教师评价考核系统"><a href="#教师评价考核系统" class="headerlink" title="教师评价考核系统"></a>教师评价考核系统</h1><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li><p><strong>开发时间</strong>：2023.11 - 2023.12  </p></li><li><p><strong>技术栈</strong>：</p><ul><li><strong>前端</strong>：Vue + Axios + HTML + JavaScript</li><li><strong>后端</strong>：Servlet + JavaBean + Filter + Listener + MVC  </li><li><strong>数据库</strong>：MySQL，结合 JDBC 操作数据  </li><li><strong>模板引擎</strong>：Thymeleaf  </li><li><strong>安全与优化</strong>：Filter 防攻击、Listener 监听与优化</li></ul></li><li><p><strong>项目要求</strong>：</p><ul><li>搭建 <strong>教学管理系统</strong>，支持 <strong>管理员、教师、学生</strong> 三类用户角色。</li><li><strong>管理员</strong> 负责 <strong>课程、教师、学生及评教指标管理</strong>。</li><li><strong>教师</strong> 可 <strong>查看课程评分与学生评价</strong>。</li><li><strong>学生</strong> 进行 <strong>教师评价、查看公告、留言</strong>。</li><li><strong>系统支持用户权限管理</strong>，生成 <strong>数据统计报表</strong>。</li></ul></li></ul><h2 id="责任描述"><a href="#责任描述" class="headerlink" title="责任描述"></a>责任描述</h2><h3 id="1-前端开发"><a href="#1-前端开发" class="headerlink" title="1. 前端开发"></a>1. 前端开发</h3><ul><li>使用 <strong>Vue</strong> 设计搭建前端界面，提供良好的交互体验。</li><li>采用 <strong>Axios</strong> 进行前后端数据交互，实现动态数据渲染。</li></ul><h3 id="2-后端业务实现"><a href="#2-后端业务实现" class="headerlink" title="2. 后端业务实现"></a>2. 后端业务实现</h3><ul><li><strong>MVC 架构</strong>：Servlet 负责调度，JavaBean 处理业务逻辑，Thymeleaf 渲染数据。</li><li><strong>课程管理</strong>：提供 <strong>增删改查</strong> 功能，支持教师查看课程信息。</li><li><strong>评价系统</strong>：学生可对教师进行评分和评价，数据存储至 MySQL。</li></ul><h3 id="3-安全与性能优化"><a href="#3-安全与性能优化" class="headerlink" title="3. 安全与性能优化"></a>3. 安全与性能优化</h3><ul><li><strong>Filter</strong>：实现 <strong>输入过滤、防SQL注入、防XSS攻击</strong>。</li><li><strong>Listener</strong>：监控用户会话状态，优化系统性能。</li><li><strong>JDBC + MySQL</strong>：数据库操作规范化，提高查询效率。</li><li><strong>漏洞修复</strong>：定期审计代码，修复安全隐患，保障系统稳定性。</li></ul><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/Sunnymasuping/Feedback">GitHub 项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>前端开发</tag>
      
      <tag>后端开发</tag>
      
      <tag>Vue</tag>
      
      <tag>Java</tag>
      
      <tag>Servlet</tag>
      
      <tag>Thymeleaf</tag>
      
      <tag>教学管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 安装流程</title>
    <link href="/2023/03/24/hexo-build/"/>
    <url>/2023/03/24/hexo-build/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-安装流程"><a href="#Hexo-安装流程" class="headerlink" title="Hexo 安装流程"></a>Hexo 安装流程</h1><p>Hexo 是一个快速、简洁且高效的博客框架，基于 Node.js 构建，使用 Markdown 格式进行内容编辑，支持主题和插件扩展，适用于搭建个人博客。</p><p>以下是安装 Hexo 的详细步骤。</p><h2 id="1-安装-Node-js-和-npm"><a href="#1-安装-Node-js-和-npm" class="headerlink" title="1. 安装 Node.js 和 npm"></a>1. 安装 Node.js 和 npm</h2><p>Hexo 依赖 Node.js 环境，因此你需要先安装 Node.js 和 npm（Node.js 的包管理工具）。</p><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><ol><li>访问 Node.js 官方网站：<a href="https://nodejs.org/">https://nodejs.org</a></li><li>下载并安装 LTS 版本的 Node.js。</li><li>安装完成后，打开命令行工具，运行以下命令检查安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure></li></ol><p>如果 Node.js 和 npm 安装成功，你会看到类似以下的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">v16.x.x<br>8.x.x<br></code></pre></td></tr></table></figure><h2 id="2-安装-Hexo"><a href="#2-安装-Hexo" class="headerlink" title="2. 安装 Hexo"></a>2. 安装 Hexo</h2><p>Hexo 可以通过 npm 安装。打开命令行工具，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装完成后，你可以通过以下命令检查 Hexo 是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>成功安装后，你应该看到类似下面的版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo: 5.0.0<br>os: Windows 10 x64<br>node: 16.x.x<br>v8: 9.x.x<br></code></pre></td></tr></table></figure><h2 id="3-创建-Hexo-博客"><a href="#3-创建-Hexo-博客" class="headerlink" title="3. 创建 Hexo 博客"></a>3. 创建 Hexo 博客</h2><p>安装 Hexo 后，你可以通过以下命令创建一个新的博客目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;your-blog-name&gt;<br></code></pre></td></tr></table></figure><p>这将会在当前目录下创建一个名为 <code>&lt;your-blog-name&gt;</code> 的文件夹，并初始化 Hexo 项目。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>进入到博客目录后，运行以下命令安装项目所需的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> &lt;your-blog-name&gt;<br>npm install<br></code></pre></td></tr></table></figure><h2 id="4-启动-Hexo-本地服务器"><a href="#4-启动-Hexo-本地服务器" class="headerlink" title="4. 启动 Hexo 本地服务器"></a>4. 启动 Hexo 本地服务器</h2><p>在 Hexo 项目目录下，使用以下命令启动本地开发服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>启动后，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>，你应该能看到 Hexo 的默认博客页面。</p><h2 id="5-配置博客"><a href="#5-配置博客" class="headerlink" title="5. 配置博客"></a>5. 配置博客</h2><p>你可以编辑 Hexo 配置文件 <code>_config.yml</code> 来修改博客的设置，包括站点名称、描述、作者信息等。以下是一些常用配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">My</span> <span class="hljs-string">Blog</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">My</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">my</span> <span class="hljs-string">blog</span> <span class="hljs-string">built</span> <span class="hljs-string">with</span> <span class="hljs-string">Hexo</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">Your</span> <span class="hljs-string">Name</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">en</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">Asia/Shanghai</span><br></code></pre></td></tr></table></figure><h2 id="6-发布博客到-GitHub-Pages"><a href="#6-发布博客到-GitHub-Pages" class="headerlink" title="6. 发布博客到 GitHub Pages"></a>6. 发布博客到 GitHub Pages</h2><p>如果你想将 Hexo 博客部署到 GitHub Pages，可以按照以下步骤进行配置。</p><h3 id="配置-config-yml-文件"><a href="#配置-config-yml-文件" class="headerlink" title="配置 _config.yml 文件"></a>配置 <code>_config.yml</code> 文件</h3><p>在 Hexo 项目的 &#96;_config</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>[object Object]</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/20/hello-world/"/>
    <url>/2023/02/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
